/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ReceiverEVM, ReceiverEVMInterface } from "../ReceiverEVM";

const _abi = [
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "onCall",
    inputs: [
      {
        name: "messageContext",
        type: "tuple",
        internalType: "struct MessageContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onRevert",
    inputs: [
      {
        name: "revertContext",
        type: "tuple",
        internalType: "struct RevertContext",
        components: [
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveERC20",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "destination",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveERC20Partial",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "destination",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveNoParams",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveNonPayable",
    inputs: [
      {
        name: "strs",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "nums",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "flag",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receivePayable",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
      {
        name: "num",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "flag",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "ReceivedERC20",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "destination",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedNoParams",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedNonPayable",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "strs",
        type: "string[]",
        indexed: false,
        internalType: "string[]",
      },
      {
        name: "nums",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
      {
        name: "flag",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedOnCall",
    inputs: [],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedPayable",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "str",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "num",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "flag",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedRevert",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "revertContext",
        type: "tuple",
        indexed: false,
        internalType: "struct RevertContext",
        components: [
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint64",
            internalType: "uint64",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ZeroAmount",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506001600055610ed0806100246000396000f3fe60806040526004361061006e5760003560e01c80636ed701691161004b5780636ed70169146100ed578063c513169114610102578063e04d4f9714610122578063f05b6abf1461013557005b8063357fc5a214610077578063660b9de014610097578063676cc054146100b757005b3661007557005b005b34801561008357600080fd5b50610075610092366004610731565b610155565b3480156100a357600080fd5b506100756100b236600461076d565b6101eb565b3480156100c357600080fd5b506100d76100d23660046107a8565b610227565b6040516100e491906108a3565b60405180910390f35b3480156100f957600080fd5b5061007561025a565b34801561010e57600080fd5b5061007561011d366004610731565b61028f565b6100756101303660046109db565b61036a565b34801561014157600080fd5b50610075610150366004610ac7565b6103ae565b61015d6103e3565b61017f73ffffffffffffffffffffffffffffffffffffffff8316338386610426565b604080513381526020810185905273ffffffffffffffffffffffffffffffffffffffff848116828401528316606082015290517f2b58128f24a9f59127cc5b5430d70542b22220f2d9adaa86e442b816ab98af609181900360800190a16101e66001600055565b505050565b7f024f3ba167dca37cfa8409bf4c2f05a4d9c2d9b39a94d7a6c970352fabaa320e338260405161021c929190610bfa565b60405180910390a150565b6040516060907f3658b46bab672c7672b69c2f0feda706eabdb7d2231421c96e9049b2db5e7eee90600090a19392505050565b6040513381527fbcaadb46b82a48af60b608f58959ae6b8310d1b0a0d094c2e9ec3208ed39f2a09060200160405180910390a1565b6102976103e3565b60006102a4600285610cd9565b9050806000036102e0576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61030273ffffffffffffffffffffffffffffffffffffffff8416338484610426565b604080513381526020810183905273ffffffffffffffffffffffffffffffffffffffff858116828401528416606082015290517f2b58128f24a9f59127cc5b5430d70542b22220f2d9adaa86e442b816ab98af609181900360800190a1506101e66001600055565b7f1f1ff1f5fb41346850b2f5c04e6c767e2f1c8a525c5c0c5cdb60cdf3ca5f62fa33348585856040516103a1959493929190610d14565b60405180910390a1505050565b7f74a53cd528a921fca7dbdee62f86819051d3cc98f214951f4238e8843f20b146338484846040516103a19493929190610d9e565b60026000540361041f576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600055565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526104bb9085906104c1565b50505050565b60006104e373ffffffffffffffffffffffffffffffffffffffff84168361055c565b905080516000141580156105085750808060200190518101906105069190610e61565b155b156101e6576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024015b60405180910390fd5b606061056a83836000610571565b9392505050565b6060814710156105af576040517fcd786059000000000000000000000000000000000000000000000000000000008152306004820152602401610553565b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516105d89190610e7e565b60006040518083038185875af1925050503d8060008114610615576040519150601f19603f3d011682016040523d82523d6000602084013e61061a565b606091505b509150915061062a868383610634565b9695505050505050565b60608261064957610644826106c3565b61056a565b815115801561066d575073ffffffffffffffffffffffffffffffffffffffff84163b155b156106bc576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610553565b508061056a565b8051156106d35780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b803573ffffffffffffffffffffffffffffffffffffffff8116811461072c57600080fd5b919050565b60008060006060848603121561074657600080fd5b8335925061075660208501610708565b915061076460408501610708565b90509250925092565b60006020828403121561077f57600080fd5b813567ffffffffffffffff81111561079657600080fd5b82016060818503121561056a57600080fd5b600080600083850360408112156107be57600080fd5b60208112156107cc57600080fd5b50839250602084013567ffffffffffffffff8111156107ea57600080fd5b8401601f810186136107fb57600080fd5b803567ffffffffffffffff81111561081257600080fd5b86602082840101111561082457600080fd5b939660209190910195509293505050565b60005b83811015610850578181015183820152602001610838565b50506000910152565b60008151808452610871816020860160208601610835565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061056a6020830184610859565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561092c5761092c6108b6565b604052919050565b600082601f83011261094557600080fd5b813567ffffffffffffffff81111561095f5761095f6108b6565b61099060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016108e5565b8181528460208386010111156109a557600080fd5b816020850160208301376000918101602001919091529392505050565b801515811461070557600080fd5b803561072c816109c2565b6000806000606084860312156109f057600080fd5b833567ffffffffffffffff811115610a0757600080fd5b610a1386828701610934565b935050602084013591506040840135610a2b816109c2565b809150509250925092565b600067ffffffffffffffff821115610a5057610a506108b6565b5060051b60200190565b600082601f830112610a6b57600080fd5b8135610a7e610a7982610a36565b6108e5565b8082825260208201915060208360051b860101925085831115610aa057600080fd5b602085015b83811015610abd578035835260209283019201610aa5565b5095945050505050565b600080600060608486031215610adc57600080fd5b833567ffffffffffffffff811115610af357600080fd5b8401601f81018613610b0457600080fd5b8035610b12610a7982610a36565b8082825260208201915060208360051b850101925088831115610b3457600080fd5b602084015b83811015610b7657803567ffffffffffffffff811115610b5857600080fd5b610b678b602083890101610934565b84525060209283019201610b39565b509550505050602084013567ffffffffffffffff811115610b9657600080fd5b610ba286828701610a5a565b925050610764604085016109d0565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015273ffffffffffffffffffffffffffffffffffffffff610c3883610708565b1660408201526000602083013567ffffffffffffffff8116808214610c5c57600080fd5b6060840152506040830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1018112610c9857600080fd5b830160208101903567ffffffffffffffff811115610cb557600080fd5b803603821315610cc457600080fd5b6060608085015261062a60a085018284610bb1565b600082610d0f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015260a060408201526000610d4960a0830186610859565b6060830194909452509015156080909101529392505050565b600081518084526020840193506020830160005b82811015610d94578151865260209586019590910190600101610d76565b5093949350505050565b60006080820173ffffffffffffffffffffffffffffffffffffffff871683526080602084015280865180835260a08501915060a08160051b86010192506020880160005b82811015610e31577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60878603018452610e1c858351610859565b94506020938401939190910190600101610de2565b505050508281036040840152610e478186610d62565b915050610e58606083018415159052565b95945050505050565b600060208284031215610e7357600080fd5b815161056a816109c2565b60008251610e90818460208701610835565b919091019291505056fea264697066735822122088bdaaf596e7a3844348476f8a4ea0e969d6453262c1805c2f4eca069896c01264736f6c634300081a0033";

type ReceiverEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReceiverEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReceiverEVM__factory extends ContractFactory {
  constructor(...args: ReceiverEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReceiverEVM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReceiverEVM__factory {
    return super.connect(runner) as ReceiverEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReceiverEVMInterface {
    return new Interface(_abi) as ReceiverEVMInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ReceiverEVM {
    return new Contract(address, _abi, runner) as unknown as ReceiverEVM;
  }
}
