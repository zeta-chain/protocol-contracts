/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ZetaTokenConsumer,
  ZetaTokenConsumerInterface,
} from "../../ZetaInterfaces.sol/ZetaTokenConsumer";

const _abi = [
  {
    type: "function",
    name: "getEthFromZeta",
    inputs: [
      {
        name: "destinationAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "minAmountOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "zetaTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getTokenFromZeta",
    inputs: [
      {
        name: "destinationAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "minAmountOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "outputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "zetaTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getZetaFromEth",
    inputs: [
      {
        name: "destinationAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "minAmountOut",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getZetaFromToken",
    inputs: [
      {
        name: "destinationAddress",
        type: "address",
        internalType: "address",
      },
      {
        name: "minAmountOut",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "inputToken",
        type: "address",
        internalType: "address",
      },
      {
        name: "inputTokenAmount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "hasZetaLiquidity",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "EthExchangedForZeta",
    inputs: [
      {
        name: "amountIn",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amountOut",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "TokenExchangedForZeta",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amountOut",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ZetaExchangedForEth",
    inputs: [
      {
        name: "amountIn",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amountOut",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ZetaExchangedForToken",
    inputs: [
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amountIn",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "amountOut",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

export class ZetaTokenConsumer__factory {
  static readonly abi = _abi;
  static createInterface(): ZetaTokenConsumerInterface {
    return new Interface(_abi) as ZetaTokenConsumerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ZetaTokenConsumer {
    return new Contract(address, _abi, runner) as unknown as ZetaTokenConsumer;
  }
}
