/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ZRC20Errors,
  ZRC20ErrorsInterface,
} from "../../ZRC20.sol/ZRC20Errors";

const _abi = [
  {
    type: "error",
    name: "CallerIsNotFungibleModule",
    inputs: [],
  },
  {
    type: "error",
    name: "GasFeeTransferFailed",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidSender",
    inputs: [],
  },
  {
    type: "error",
    name: "LowAllowance",
    inputs: [],
  },
  {
    type: "error",
    name: "LowBalance",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroGasCoin",
    inputs: [],
  },
  {
    type: "error",
    name: "ZeroGasPrice",
    inputs: [],
  },
] as const;

export class ZRC20Errors__factory {
  static readonly abi = _abi;
  static createInterface(): ZRC20ErrorsInterface {
    return new Interface(_abi) as ZRC20ErrorsInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ZRC20Errors {
    return new Contract(address, _abi, runner) as unknown as ZRC20Errors;
  }
}
