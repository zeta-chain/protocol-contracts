/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../../common";

export interface ISystemInterface extends utils.Interface {
  functions: {
    "FUNGIBLE_MODULE_ADDRESS()": FunctionFragment;
    "gasCoinZRC20ByChainId(uint256)": FunctionFragment;
    "gasPriceByChainId(uint256)": FunctionFragment;
    "gasZetaPoolByChainId(uint256)": FunctionFragment;
    "uniswapv2FactoryAddress()": FunctionFragment;
    "wZetaContractAddress()": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "FUNGIBLE_MODULE_ADDRESS"
      | "gasCoinZRC20ByChainId"
      | "gasPriceByChainId"
      | "gasZetaPoolByChainId"
      | "uniswapv2FactoryAddress"
      | "wZetaContractAddress"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "FUNGIBLE_MODULE_ADDRESS",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "gasCoinZRC20ByChainId",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "gasPriceByChainId",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "gasZetaPoolByChainId",
    values: [PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "uniswapv2FactoryAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "wZetaContractAddress",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "FUNGIBLE_MODULE_ADDRESS",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gasCoinZRC20ByChainId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gasPriceByChainId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "gasZetaPoolByChainId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "uniswapv2FactoryAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "wZetaContractAddress",
    data: BytesLike
  ): Result;

  events: {};
}

export interface ISystem extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: ISystemInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    FUNGIBLE_MODULE_ADDRESS(overrides?: CallOverrides): Promise<[string]>;

    gasCoinZRC20ByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    gasPriceByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    gasZetaPoolByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[string]>;

    uniswapv2FactoryAddress(overrides?: CallOverrides): Promise<[string]>;

    wZetaContractAddress(overrides?: CallOverrides): Promise<[string]>;
  };

  FUNGIBLE_MODULE_ADDRESS(overrides?: CallOverrides): Promise<string>;

  gasCoinZRC20ByChainId(
    chainID: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  gasPriceByChainId(
    chainID: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  gasZetaPoolByChainId(
    chainID: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<string>;

  uniswapv2FactoryAddress(overrides?: CallOverrides): Promise<string>;

  wZetaContractAddress(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    FUNGIBLE_MODULE_ADDRESS(overrides?: CallOverrides): Promise<string>;

    gasCoinZRC20ByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    gasPriceByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    gasZetaPoolByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<string>;

    uniswapv2FactoryAddress(overrides?: CallOverrides): Promise<string>;

    wZetaContractAddress(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    FUNGIBLE_MODULE_ADDRESS(overrides?: CallOverrides): Promise<BigNumber>;

    gasCoinZRC20ByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    gasPriceByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    gasZetaPoolByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    uniswapv2FactoryAddress(overrides?: CallOverrides): Promise<BigNumber>;

    wZetaContractAddress(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    FUNGIBLE_MODULE_ADDRESS(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    gasCoinZRC20ByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    gasPriceByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    gasZetaPoolByChainId(
      chainID: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    uniswapv2FactoryAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    wZetaContractAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
