/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20CustodyNew,
  ERC20CustodyNewInterface,
} from "../../../../contracts/prototypes/evm/ERC20CustodyNew";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "WithdrawAndCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "WithdrawAndRevert",
    type: "event",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IGatewayEVM",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawAndCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawAndRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200123f3803806200123f833981810160405281019062000037919062000106565b6001600081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620000a7576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200018b565b600081519050620001008162000171565b92915050565b6000602082840312156200011f576200011e6200016c565b5b60006200012f84828501620000ef565b91505092915050565b600062000145826200014c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200017c8162000138565b81146200018857600080fd5b50565b6110a4806200019b6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063116191b61461005157806321fc65f21461006f578063c8a023621461008b578063d9caed12146100a7575b600080fd5b6100596100c3565b6040516100669190610c47565b60405180910390f35b6100896004803603810190610084919061096b565b6100e9565b005b6100a560048036038101906100a0919061096b565b610271565b005b6100c160048036038101906100bc9190610918565b6103f9565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6100f161049e565b61013e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848773ffffffffffffffffffffffffffffffffffffffff166104ee9092919063ffffffff16565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635131ab5986868686866040518663ffffffff1660e01b81526004016101a1959493929190610bd0565b600060405180830381600087803b1580156101bb57600080fd5b505af11580156101cf573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906101f89190610a20565b508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f85b5be9cf454e05e0bddf49315178102227c312078eefa3c00294fb4d912ae4e85858560405161025a93929190610d1f565b60405180910390a361026a610574565b5050505050565b61027961049e565b6102c6600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16848773ffffffffffffffffffffffffffffffffffffffff166104ee9092919063ffffffff16565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635131ab5986868686866040518663ffffffff1660e01b8152600401610329959493929190610bd0565b600060405180830381600087803b15801561034357600080fd5b505af1158015610357573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906103809190610a20565b508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fb9d4efa96044e5f5e03e696fa9ae2ff66911cc27e8a637c3627c75bc5b2241c88585856040516103e293929190610d1f565b60405180910390a36103f2610574565b5050505050565b61040161049e565b61042c82828573ffffffffffffffffffffffffffffffffffffffff166104ee9092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb836040516104899190610d04565b60405180910390a3610499610574565b505050565b600260005414156104e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104db90610ce4565b60405180910390fd5b6002600081905550565b61056f8363a9059cbb60e01b848460405160240161050d929190610c1e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061057e565b505050565b6001600081905550565b60006105e0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166106459092919063ffffffff16565b9050600081511115610640578080602001905181019061060091906109f3565b61063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063690610cc4565b60405180910390fd5b5b505050565b6060610654848460008561065d565b90509392505050565b6060824710156106a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069990610c84565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516106cb9190610bb9565b60006040518083038185875af1925050503d8060008114610708576040519150601f19603f3d011682016040523d82523d6000602084013e61070d565b606091505b509150915061071e8783838761072a565b92505050949350505050565b6060831561078d5760008351141561078557610745856107a0565b610784576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077b90610ca4565b60405180910390fd5b5b829050610798565b61079783836107c3565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156107d65781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a9190610c62565b60405180910390fd5b600061082661082184610d76565b610d51565b90508281526020810184848401111561084257610841610f19565b5b61084d848285610e77565b509392505050565b60008135905061086481611029565b92915050565b60008151905061087981611040565b92915050565b60008083601f84011261089557610894610f0f565b5b8235905067ffffffffffffffff8111156108b2576108b1610f0a565b5b6020830191508360018202830111156108ce576108cd610f14565b5b9250929050565b600082601f8301126108ea576108e9610f0f565b5b81516108fa848260208601610813565b91505092915050565b60008135905061091281611057565b92915050565b60008060006060848603121561093157610930610f23565b5b600061093f86828701610855565b935050602061095086828701610855565b925050604061096186828701610903565b9150509250925092565b60008060008060006080868803121561098757610986610f23565b5b600061099588828901610855565b95505060206109a688828901610855565b94505060406109b788828901610903565b935050606086013567ffffffffffffffff8111156109d8576109d7610f1e565b5b6109e48882890161087f565b92509250509295509295909350565b600060208284031215610a0957610a08610f23565b5b6000610a178482850161086a565b91505092915050565b600060208284031215610a3657610a35610f23565b5b600082015167ffffffffffffffff811115610a5457610a53610f1e565b5b610a60848285016108d5565b91505092915050565b610a7281610dea565b82525050565b6000610a848385610dbd565b9350610a91838584610e68565b610a9a83610f28565b840190509392505050565b6000610ab082610da7565b610aba8185610dce565b9350610aca818560208601610e77565b80840191505092915050565b610adf81610e32565b82525050565b6000610af082610db2565b610afa8185610dd9565b9350610b0a818560208601610e77565b610b1381610f28565b840191505092915050565b6000610b2b602683610dd9565b9150610b3682610f39565b604082019050919050565b6000610b4e601d83610dd9565b9150610b5982610f88565b602082019050919050565b6000610b71602a83610dd9565b9150610b7c82610fb1565b604082019050919050565b6000610b94601f83610dd9565b9150610b9f82611000565b602082019050919050565b610bb381610e28565b82525050565b6000610bc58284610aa5565b915081905092915050565b6000608082019050610be56000830188610a69565b610bf26020830187610a69565b610bff6040830186610baa565b8181036060830152610c12818486610a78565b90509695505050505050565b6000604082019050610c336000830185610a69565b610c406020830184610baa565b9392505050565b6000602082019050610c5c6000830184610ad6565b92915050565b60006020820190508181036000830152610c7c8184610ae5565b905092915050565b60006020820190508181036000830152610c9d81610b1e565b9050919050565b60006020820190508181036000830152610cbd81610b41565b9050919050565b60006020820190508181036000830152610cdd81610b64565b9050919050565b60006020820190508181036000830152610cfd81610b87565b9050919050565b6000602082019050610d196000830184610baa565b92915050565b6000604082019050610d346000830186610baa565b8181036020830152610d47818486610a78565b9050949350505050565b6000610d5b610d6c565b9050610d678282610eaa565b919050565b6000604051905090565b600067ffffffffffffffff821115610d9157610d90610edb565b5b610d9a82610f28565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610df582610e08565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610e3d82610e44565b9050919050565b6000610e4f82610e56565b9050919050565b6000610e6182610e08565b9050919050565b82818337600083830152505050565b60005b83811015610e95578082015181840152602081019050610e7a565b83811115610ea4576000848401525b50505050565b610eb382610f28565b810181811067ffffffffffffffff82111715610ed257610ed1610edb565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b61103281610dea565b811461103d57600080fd5b50565b61104981610dfc565b811461105457600080fd5b50565b61106081610e28565b811461106b57600080fd5b5056fea264697066735822122034916fcf763546c650529df8ac1ce35e3480b605125b539d009b0bc21e5a4c0d64736f6c63430008070033";

type ERC20CustodyNewConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20CustodyNewConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20CustodyNew__factory extends ContractFactory {
  constructor(...args: ERC20CustodyNewConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20CustodyNew> {
    return super.deploy(_gateway, overrides || {}) as Promise<ERC20CustodyNew>;
  }
  override getDeployTransaction(
    _gateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gateway, overrides || {});
  }
  override attach(address: string): ERC20CustodyNew {
    return super.attach(address) as ERC20CustodyNew;
  }
  override connect(signer: Signer): ERC20CustodyNew__factory {
    return super.connect(signer) as ERC20CustodyNew__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20CustodyNewInterface {
    return new utils.Interface(_abi) as ERC20CustodyNewInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20CustodyNew {
    return new Contract(address, _abi, signerOrProvider) as ERC20CustodyNew;
  }
}
