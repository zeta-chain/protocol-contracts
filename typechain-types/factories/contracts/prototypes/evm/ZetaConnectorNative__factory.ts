/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ZetaConnectorNative,
  ZetaConnectorNativeInterface,
} from "../../../../contracts/prototypes/evm/ZetaConnectorNative";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_zetaToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "WithdrawAndCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "WithdrawAndRevert",
    type: "event",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IGatewayEVM",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "receiveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "internalSendHash",
        type: "bytes32",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "internalSendHash",
        type: "bytes32",
      },
    ],
    name: "withdrawAndCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "internalSendHash",
        type: "bytes32",
      },
    ],
    name: "withdrawAndRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "zetaToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620013b3380380620013b3833981810160405281019062000037919062000170565b81816001600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480620000a95750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15620000e1576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505050506200020a565b6000815190506200016a81620001f0565b92915050565b600080604083850312156200018a5762000189620001eb565b5b60006200019a8582860162000159565b9250506020620001ad8582860162000159565b9150509250929050565b6000620001c482620001cb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001fb81620001b7565b81146200020757600080fd5b50565b60805160601c60a05160601c6111376200027c60003960008181610142015281816101c4015281816102a90152818161036e015281816103bf01528181610441015261051f015260008181610120015281816101880152818161034a0152818161039d015261040501526111376000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806302d5c89914610067578063106e629014610083578063116191b61461009f57806321e093b1146100bd5780635e3e9fef146100db578063743e0c9b146100f7575b600080fd5b610081600480360381019061007c9190610a62565b610113565b005b61009d60048036038101906100989190610a0f565b61029a565b005b6100a7610348565b6040516100b49190610d74565b60405180910390f35b6100c561036c565b6040516100d29190610cab565b60405180910390f35b6100f560048036038101906100f09190610a62565b610390565b005b610111600480360381019061010c9190610b17565b610517565b005b61011b610567565b6101867f0000000000000000000000000000000000000000000000000000000000000000857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166105b79092919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b8969bd47f0000000000000000000000000000000000000000000000000000000000000000878787876040518663ffffffff1660e01b8152600401610207959493929190610cfd565b600060405180830381600087803b15801561022157600080fd5b505af1158015610235573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff167fba96f26bdda53eb8c8ba39045dfb4ff39753fbc7a6edcf250a88e75e78d102fe85858560405161028393929190610e4c565b60405180910390a261029361063d565b5050505050565b6102a2610567565b6102ed83837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166105b79092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040516103339190610e31565b60405180910390a261034361063d565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b610398610567565b6104037f0000000000000000000000000000000000000000000000000000000000000000857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166105b79092919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635131ab597f0000000000000000000000000000000000000000000000000000000000000000878787876040518663ffffffff1660e01b8152600401610484959493929190610cfd565b600060405180830381600087803b15801561049e57600080fd5b505af11580156104b2573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff167f7772f56296d3a5202974a45c61c9188d844ab4d6eeb18c851e4b8d5384ca6ced85858560405161050093929190610e4c565b60405180910390a261051061063d565b5050505050565b6105643330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610647909392919063ffffffff16565b50565b600260005414156105ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a490610e11565b60405180910390fd5b6002600081905550565b6106388363a9059cbb60e01b84846040516024016105d6929190610d4b565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d0565b505050565b6001600081905550565b6106ca846323b872dd60e01b85858560405160240161066893929190610cc6565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506106d0565b50505050565b6000610732826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166107979092919063ffffffff16565b905060008151111561079257808060200190518101906107529190610aea565b610791576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078890610df1565b60405180910390fd5b5b505050565b60606107a684846000856107af565b90509392505050565b6060824710156107f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107eb90610db1565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161081d9190610c94565b60006040518083038185875af1925050503d806000811461085a576040519150601f19603f3d011682016040523d82523d6000602084013e61085f565b606091505b50915091506108708783838761087c565b92505050949350505050565b606083156108df576000835114156108d757610897856108f2565b6108d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cd90610dd1565b60405180910390fd5b5b8290506108ea565b6108e98383610915565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156109285781518083602001fd5b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095c9190610d8f565b60405180910390fd5b600081359050610974816110a5565b92915050565b600081519050610989816110bc565b92915050565b60008135905061099e816110d3565b92915050565b60008083601f8401126109ba576109b9610f90565b5b8235905067ffffffffffffffff8111156109d7576109d6610f8b565b5b6020830191508360018202830111156109f3576109f2610f95565b5b9250929050565b600081359050610a09816110ea565b92915050565b600080600060608486031215610a2857610a27610f9f565b5b6000610a3686828701610965565b9350506020610a47868287016109fa565b9250506040610a588682870161098f565b9150509250925092565b600080600080600060808688031215610a7e57610a7d610f9f565b5b6000610a8c88828901610965565b9550506020610a9d888289016109fa565b945050604086013567ffffffffffffffff811115610abe57610abd610f9a565b5b610aca888289016109a4565b93509350506060610add8882890161098f565b9150509295509295909350565b600060208284031215610b0057610aff610f9f565b5b6000610b0e8482850161097a565b91505092915050565b600060208284031215610b2d57610b2c610f9f565b5b6000610b3b848285016109fa565b91505092915050565b610b4d81610ec1565b82525050565b6000610b5f8385610e94565b9350610b6c838584610f49565b610b7583610fa4565b840190509392505050565b6000610b8b82610e7e565b610b958185610ea5565b9350610ba5818560208601610f58565b80840191505092915050565b610bba81610f13565b82525050565b6000610bcb82610e89565b610bd58185610eb0565b9350610be5818560208601610f58565b610bee81610fa4565b840191505092915050565b6000610c06602683610eb0565b9150610c1182610fb5565b604082019050919050565b6000610c29601d83610eb0565b9150610c3482611004565b602082019050919050565b6000610c4c602a83610eb0565b9150610c578261102d565b604082019050919050565b6000610c6f601f83610eb0565b9150610c7a8261107c565b602082019050919050565b610c8e81610f09565b82525050565b6000610ca08284610b80565b915081905092915050565b6000602082019050610cc06000830184610b44565b92915050565b6000606082019050610cdb6000830186610b44565b610ce86020830185610b44565b610cf56040830184610c85565b949350505050565b6000608082019050610d126000830188610b44565b610d1f6020830187610b44565b610d2c6040830186610c85565b8181036060830152610d3f818486610b53565b90509695505050505050565b6000604082019050610d606000830185610b44565b610d6d6020830184610c85565b9392505050565b6000602082019050610d896000830184610bb1565b92915050565b60006020820190508181036000830152610da98184610bc0565b905092915050565b60006020820190508181036000830152610dca81610bf9565b9050919050565b60006020820190508181036000830152610dea81610c1c565b9050919050565b60006020820190508181036000830152610e0a81610c3f565b9050919050565b60006020820190508181036000830152610e2a81610c62565b9050919050565b6000602082019050610e466000830184610c85565b92915050565b6000604082019050610e616000830186610c85565b8181036020830152610e74818486610b53565b9050949350505050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610ecc82610ee9565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f1e82610f25565b9050919050565b6000610f3082610f37565b9050919050565b6000610f4282610ee9565b9050919050565b82818337600083830152505050565b60005b83811015610f76578082015181840152602081019050610f5b565b83811115610f85576000848401525b50505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6110ae81610ec1565b81146110b957600080fd5b50565b6110c581610ed3565b81146110d057600080fd5b50565b6110dc81610edf565b81146110e757600080fd5b50565b6110f381610f09565b81146110fe57600080fd5b5056fea26469706673582212200e9dddf368c3ba5db7f48f5e58ca49b68962f70e56e54ab42ef1145f5ce62e6164736f6c63430008070033";

type ZetaConnectorNativeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZetaConnectorNativeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZetaConnectorNative__factory extends ContractFactory {
  constructor(...args: ZetaConnectorNativeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gateway: PromiseOrValue<string>,
    _zetaToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZetaConnectorNative> {
    return super.deploy(
      _gateway,
      _zetaToken,
      overrides || {}
    ) as Promise<ZetaConnectorNative>;
  }
  override getDeployTransaction(
    _gateway: PromiseOrValue<string>,
    _zetaToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gateway, _zetaToken, overrides || {});
  }
  override attach(address: string): ZetaConnectorNative {
    return super.attach(address) as ZetaConnectorNative;
  }
  override connect(signer: Signer): ZetaConnectorNative__factory {
    return super.connect(signer) as ZetaConnectorNative__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZetaConnectorNativeInterface {
    return new utils.Interface(_abi) as ZetaConnectorNativeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZetaConnectorNative {
    return new Contract(address, _abi, signerOrProvider) as ZetaConnectorNative;
  }
}
