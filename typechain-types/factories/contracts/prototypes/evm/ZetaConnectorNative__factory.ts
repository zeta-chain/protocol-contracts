/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ZetaConnectorNative,
  ZetaConnectorNativeInterface,
} from "../../../../contracts/prototypes/evm/ZetaConnectorNative";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_zetaToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "WithdrawAndCall",
    type: "event",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IGatewayEVM",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "receiveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "internalSendHash",
        type: "bytes32",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "internalSendHash",
        type: "bytes32",
      },
    ],
    name: "withdrawAndCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "zetaToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620011e8380380620011e8833981810160405281019062000037919062000170565b81816001600081905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161480620000a95750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b15620000e1576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508073ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b81525050505050506200020a565b6000815190506200016a81620001f0565b92915050565b600080604083850312156200018a5762000189620001eb565b5b60006200019a8582860162000159565b9250506020620001ad8582860162000159565b9150509250929050565b6000620001c482620001cb565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001fb81620001b7565b81146200020757600080fd5b50565b60805160601c60a05160601c610f896200025f6000396000818160fb015281816101c00152818161021101528181610293015261037101526000818161019c015281816101ef01526102570152610f896000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063106e62901461005c578063116191b61461007857806321e093b1146100965780635e3e9fef146100b4578063743e0c9b146100d0575b600080fd5b61007660048036038101906100719190610861565b6100ec565b005b61008061019a565b60405161008d9190610bc6565b60405180910390f35b61009e6101be565b6040516100ab9190610afd565b60405180910390f35b6100ce60048036038101906100c991906108b4565b6101e2565b005b6100ea60048036038101906100e59190610969565b610369565b005b6100f46103b9565b61013f83837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166104099092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040516101859190610c83565b60405180910390a261019561048f565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b6101ea6103b9565b6102557f0000000000000000000000000000000000000000000000000000000000000000857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166104099092919063ffffffff16565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635131ab597f0000000000000000000000000000000000000000000000000000000000000000878787876040518663ffffffff1660e01b81526004016102d6959493929190610b4f565b600060405180830381600087803b1580156102f057600080fd5b505af1158015610304573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff167f7772f56296d3a5202974a45c61c9188d844ab4d6eeb18c851e4b8d5384ca6ced85858560405161035293929190610c9e565b60405180910390a261036261048f565b5050505050565b6103b63330837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610499909392919063ffffffff16565b50565b600260005414156103ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f690610c63565b60405180910390fd5b6002600081905550565b61048a8363a9059cbb60e01b8484604051602401610428929190610b9d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610522565b505050565b6001600081905550565b61051c846323b872dd60e01b8585856040516024016104ba93929190610b18565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610522565b50505050565b6000610584826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166105e99092919063ffffffff16565b90506000815111156105e457808060200190518101906105a4919061093c565b6105e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105da90610c43565b60405180910390fd5b5b505050565b60606105f88484600085610601565b90509392505050565b606082471015610646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d90610c03565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161066f9190610ae6565b60006040518083038185875af1925050503d80600081146106ac576040519150601f19603f3d011682016040523d82523d6000602084013e6106b1565b606091505b50915091506106c2878383876106ce565b92505050949350505050565b6060831561073157600083511415610729576106e985610744565b610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071f90610c23565b60405180910390fd5b5b82905061073c565b61073b8383610767565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60008251111561077a5781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ae9190610be1565b60405180910390fd5b6000813590506107c681610ef7565b92915050565b6000815190506107db81610f0e565b92915050565b6000813590506107f081610f25565b92915050565b60008083601f84011261080c5761080b610de2565b5b8235905067ffffffffffffffff81111561082957610828610ddd565b5b60208301915083600182028301111561084557610844610de7565b5b9250929050565b60008135905061085b81610f3c565b92915050565b60008060006060848603121561087a57610879610df1565b5b6000610888868287016107b7565b93505060206108998682870161084c565b92505060406108aa868287016107e1565b9150509250925092565b6000806000806000608086880312156108d0576108cf610df1565b5b60006108de888289016107b7565b95505060206108ef8882890161084c565b945050604086013567ffffffffffffffff8111156109105761090f610dec565b5b61091c888289016107f6565b9350935050606061092f888289016107e1565b9150509295509295909350565b60006020828403121561095257610951610df1565b5b6000610960848285016107cc565b91505092915050565b60006020828403121561097f5761097e610df1565b5b600061098d8482850161084c565b91505092915050565b61099f81610d13565b82525050565b60006109b18385610ce6565b93506109be838584610d9b565b6109c783610df6565b840190509392505050565b60006109dd82610cd0565b6109e78185610cf7565b93506109f7818560208601610daa565b80840191505092915050565b610a0c81610d65565b82525050565b6000610a1d82610cdb565b610a278185610d02565b9350610a37818560208601610daa565b610a4081610df6565b840191505092915050565b6000610a58602683610d02565b9150610a6382610e07565b604082019050919050565b6000610a7b601d83610d02565b9150610a8682610e56565b602082019050919050565b6000610a9e602a83610d02565b9150610aa982610e7f565b604082019050919050565b6000610ac1601f83610d02565b9150610acc82610ece565b602082019050919050565b610ae081610d5b565b82525050565b6000610af282846109d2565b915081905092915050565b6000602082019050610b126000830184610996565b92915050565b6000606082019050610b2d6000830186610996565b610b3a6020830185610996565b610b476040830184610ad7565b949350505050565b6000608082019050610b646000830188610996565b610b716020830187610996565b610b7e6040830186610ad7565b8181036060830152610b918184866109a5565b90509695505050505050565b6000604082019050610bb26000830185610996565b610bbf6020830184610ad7565b9392505050565b6000602082019050610bdb6000830184610a03565b92915050565b60006020820190508181036000830152610bfb8184610a12565b905092915050565b60006020820190508181036000830152610c1c81610a4b565b9050919050565b60006020820190508181036000830152610c3c81610a6e565b9050919050565b60006020820190508181036000830152610c5c81610a91565b9050919050565b60006020820190508181036000830152610c7c81610ab4565b9050919050565b6000602082019050610c986000830184610ad7565b92915050565b6000604082019050610cb36000830186610ad7565b8181036020830152610cc68184866109a5565b9050949350505050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b6000610d1e82610d3b565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610d7082610d77565b9050919050565b6000610d8282610d89565b9050919050565b6000610d9482610d3b565b9050919050565b82818337600083830152505050565b60005b83811015610dc8578082015181840152602081019050610dad565b83811115610dd7576000848401525b50505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b610f0081610d13565b8114610f0b57600080fd5b50565b610f1781610d25565b8114610f2257600080fd5b50565b610f2e81610d31565b8114610f3957600080fd5b50565b610f4581610d5b565b8114610f5057600080fd5b5056fea2646970667358221220e078e28757cd57d1735fda93fd375a6dd46dc1fae7ad47e047f8e4a0740a565f64736f6c63430008070033";

type ZetaConnectorNativeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZetaConnectorNativeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZetaConnectorNative__factory extends ContractFactory {
  constructor(...args: ZetaConnectorNativeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gateway: PromiseOrValue<string>,
    _zetaToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZetaConnectorNative> {
    return super.deploy(
      _gateway,
      _zetaToken,
      overrides || {}
    ) as Promise<ZetaConnectorNative>;
  }
  override getDeployTransaction(
    _gateway: PromiseOrValue<string>,
    _zetaToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gateway, _zetaToken, overrides || {});
  }
  override attach(address: string): ZetaConnectorNative {
    return super.attach(address) as ZetaConnectorNative;
  }
  override connect(signer: Signer): ZetaConnectorNative__factory {
    return super.connect(signer) as ZetaConnectorNative__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZetaConnectorNativeInterface {
    return new utils.Interface(_abi) as ZetaConnectorNativeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZetaConnectorNative {
    return new Contract(address, _abi, signerOrProvider) as ZetaConnectorNative;
  }
}
