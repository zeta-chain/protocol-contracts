/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ReceiverEVM,
  ReceiverEVMInterface,
} from "../../../../contracts/prototypes/evm/ReceiverEVM";

const _abi = [
  {
    inputs: [],
    name: "ZeroAmount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "ReceivedERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ReceivedNoParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "strs",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "nums",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "ReceivedNonPayable",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "ReceivedPayable",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ReceivedRevert",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "receiveERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "receiveERC20Partial",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveNoParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "strs",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "nums",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "receiveNonPayable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "receivePayable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061136d806100206000396000f3fe6080604052600436106100595760003560e01c8063357fc5a2146100625780636ed701691461008b5780638fcaa0b5146100a2578063c5131691146100cb578063e04d4f97146100f4578063f05b6abf1461011057610060565b3661006057005b005b34801561006e57600080fd5b5061008960048036038101906100849190610a68565b610139565b005b34801561009757600080fd5b506100a06101a8565b005b3480156100ae57600080fd5b506100c960048036038101906100c491906109ac565b6101e1565b005b3480156100d757600080fd5b506100f260048036038101906100ed9190610a68565b610220565b005b61010e600480360381019061010991906109f9565b6102dc565b005b34801561011c57600080fd5b50610137600480360381019061013291906108f4565b610320565b005b6101663382858573ffffffffffffffffffffffffffffffffffffffff16610362909392919063ffffffff16565b7f2b58128f24a9f59127cc5b5430d70542b22220f2d9adaa86e442b816ab98af603384848460405161019b9493929190610e1d565b60405180910390a1505050565b7fbcaadb46b82a48af60b608f58959ae6b8310d1b0a0d094c2e9ec3208ed39f2a0336040516101d79190610d46565b60405180910390a1565b7f0d3f65f00e631663aa85c96330b5c7a83bb29af3630c0063776f985edc3037aa33838360405161021493929190610deb565b60405180910390a15050565b600060028461022f91906110b2565b9050600081141561026c576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102993383838673ffffffffffffffffffffffffffffffffffffffff16610362909392919063ffffffff16565b7f2b58128f24a9f59127cc5b5430d70542b22220f2d9adaa86e442b816ab98af60338285856040516102ce9493929190610e1d565b60405180910390a150505050565b7f1f1ff1f5fb41346850b2f5c04e6c767e2f1c8a525c5c0c5cdb60cdf3ca5f62fa3334858585604051610313959493929190610e62565b60405180910390a1505050565b7f74a53cd528a921fca7dbdee62f86819051d3cc98f214951f4238e8843f20b146338484846040516103559493929190610d98565b60405180910390a1505050565b6103e5846323b872dd60e01b85858560405160240161038393929190610d61565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103eb565b50505050565b600061044d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166104b29092919063ffffffff16565b90506000815111156104ad578080602001905181019061046d919061097f565b6104ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a390610f1e565b60405180910390fd5b5b505050565b60606104c184846000856104ca565b90509392505050565b60608247101561050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610ede565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516105389190610d2f565b60006040518083038185875af1925050503d8060008114610575576040519150601f19603f3d011682016040523d82523d6000602084013e61057a565b606091505b509150915061058b87838387610597565b92505050949350505050565b606083156105fa576000835114156105f2576105b28561060d565b6105f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e890610efe565b60405180910390fd5b5b829050610605565b6106048383610630565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156106435781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106779190610ebc565b60405180910390fd5b600061069361068e84610f63565b610f3e565b905080838252602082019050828560208602820111156106b6576106b5611206565b5b60005b8581101561070457813567ffffffffffffffff8111156106dc576106db611201565b5b8086016106e989826108b1565b855260208501945060208401935050506001810190506106b9565b5050509392505050565b600061072161071c84610f8f565b610f3e565b9050808382526020820190508285602086028201111561074457610743611206565b5b60005b85811015610774578161075a88826108df565b845260208401935060208301925050600181019050610747565b5050509392505050565b600061079161078c84610fbb565b610f3e565b9050828152602081018484840111156107ad576107ac61120b565b5b6107b884828561112b565b509392505050565b6000813590506107cf816112f2565b92915050565b600082601f8301126107ea576107e9611201565b5b81356107fa848260208601610680565b91505092915050565b600082601f83011261081857610817611201565b5b813561082884826020860161070e565b91505092915050565b60008135905061084081611309565b92915050565b60008151905061085581611309565b92915050565b60008083601f84011261087157610870611201565b5b8235905067ffffffffffffffff81111561088e5761088d6111fc565b5b6020830191508360018202830111156108aa576108a9611206565b5b9250929050565b600082601f8301126108c6576108c5611201565b5b81356108d684826020860161077e565b91505092915050565b6000813590506108ee81611320565b92915050565b60008060006060848603121561090d5761090c611215565b5b600084013567ffffffffffffffff81111561092b5761092a611210565b5b610937868287016107d5565b935050602084013567ffffffffffffffff81111561095857610957611210565b5b61096486828701610803565b925050604061097586828701610831565b9150509250925092565b60006020828403121561099557610994611215565b5b60006109a384828501610846565b91505092915050565b600080602083850312156109c3576109c2611215565b5b600083013567ffffffffffffffff8111156109e1576109e0611210565b5b6109ed8582860161085b565b92509250509250929050565b600080600060608486031215610a1257610a11611215565b5b600084013567ffffffffffffffff811115610a3057610a2f611210565b5b610a3c868287016108b1565b9350506020610a4d868287016108df565b9250506040610a5e86828701610831565b9150509250925092565b600080600060608486031215610a8157610a80611215565b5b6000610a8f868287016108df565b9350506020610aa0868287016107c0565b9250506040610ab1868287016107c0565b9150509250925092565b6000610ac78383610c36565b905092915050565b6000610adb8383610d11565b60208301905092915050565b610af0816110e3565b82525050565b6000610b018261100c565b610b0b8185611052565b935083602082028501610b1d85610fec565b8060005b85811015610b595784840389528151610b3a8582610abb565b9450610b4583611038565b925060208a01995050600181019050610b21565b50829750879550505050505092915050565b6000610b7682611017565b610b808185611063565b9350610b8b83610ffc565b8060005b83811015610bbc578151610ba38882610acf565b9750610bae83611045565b925050600181019050610b8f565b5085935050505092915050565b610bd2816110f5565b82525050565b6000610be48385611074565b9350610bf183858461112b565b610bfa8361121a565b840190509392505050565b6000610c1082611022565b610c1a8185611085565b9350610c2a81856020860161113a565b80840191505092915050565b6000610c418261102d565b610c4b8185611090565b9350610c5b81856020860161113a565b610c648161121a565b840191505092915050565b6000610c7a8261102d565b610c8481856110a1565b9350610c9481856020860161113a565b610c9d8161121a565b840191505092915050565b6000610cb56026836110a1565b9150610cc08261122b565b604082019050919050565b6000610cd8601d836110a1565b9150610ce38261127a565b602082019050919050565b6000610cfb602a836110a1565b9150610d06826112a3565b604082019050919050565b610d1a81611121565b82525050565b610d2981611121565b82525050565b6000610d3b8284610c05565b915081905092915050565b6000602082019050610d5b6000830184610ae7565b92915050565b6000606082019050610d766000830186610ae7565b610d836020830185610ae7565b610d906040830184610d20565b949350505050565b6000608082019050610dad6000830187610ae7565b8181036020830152610dbf8186610af6565b90508181036040830152610dd38185610b6b565b9050610de26060830184610bc9565b95945050505050565b6000604082019050610e006000830186610ae7565b8181036020830152610e13818486610bd8565b9050949350505050565b6000608082019050610e326000830187610ae7565b610e3f6020830186610d20565b610e4c6040830185610ae7565b610e596060830184610ae7565b95945050505050565b600060a082019050610e776000830188610ae7565b610e846020830187610d20565b8181036040830152610e968186610c6f565b9050610ea56060830185610d20565b610eb26080830184610bc9565b9695505050505050565b60006020820190508181036000830152610ed68184610c6f565b905092915050565b60006020820190508181036000830152610ef781610ca8565b9050919050565b60006020820190508181036000830152610f1781610ccb565b9050919050565b60006020820190508181036000830152610f3781610cee565b9050919050565b6000610f48610f59565b9050610f54828261116d565b919050565b6000604051905090565b600067ffffffffffffffff821115610f7e57610f7d6111cd565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610faa57610fa96111cd565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610fd657610fd56111cd565b5b610fdf8261121a565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006110bd82611121565b91506110c883611121565b9250826110d8576110d761119e565b5b828204905092915050565b60006110ee82611101565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561115857808201518184015260208101905061113d565b83811115611167576000848401525b50505050565b6111768261121a565b810181811067ffffffffffffffff82111715611195576111946111cd565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6112fb816110e3565b811461130657600080fd5b50565b611312816110f5565b811461131d57600080fd5b50565b61132981611121565b811461133457600080fd5b5056fea2646970667358221220a0309d6315771693572c6c753bf9ab1fb30e2f89e0783f8d0607561f1a5589dc64736f6c63430008070033";

type ReceiverEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReceiverEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReceiverEVM__factory extends ContractFactory {
  constructor(...args: ReceiverEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReceiverEVM> {
    return super.deploy(overrides || {}) as Promise<ReceiverEVM>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReceiverEVM {
    return super.attach(address) as ReceiverEVM;
  }
  override connect(signer: Signer): ReceiverEVM__factory {
    return super.connect(signer) as ReceiverEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReceiverEVMInterface {
    return new utils.Interface(_abi) as ReceiverEVMInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReceiverEVM {
    return new Contract(address, _abi, signerOrProvider) as ReceiverEVM;
  }
}
