/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ReceiverEVM,
  ReceiverEVMInterface,
} from "../../../../contracts/prototypes/evm/ReceiverEVM";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "ReceivedERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ReceivedNoParams",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string[]",
        name: "strs",
        type: "string[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "nums",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "ReceivedNonPayable",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "ReceivedPayable",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "receiveERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
    ],
    name: "receiveERC20Partial",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "receiveNoParams",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "strs",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "nums",
        type: "uint256[]",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "receiveNonPayable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "receivePayable",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506111a5806100206000396000f3fe60806040526004361061004a5760003560e01c8063357fc5a21461004f5780636ed7016914610078578063c51316911461008f578063e04d4f97146100b8578063f05b6abf146100d4575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610915565b6100fd565b005b34801561008457600080fd5b5061008d61016c565b005b34801561009b57600080fd5b506100b660048036038101906100b19190610915565b6101a5565b005b6100d260048036038101906100cd91906108a6565b61022c565b005b3480156100e057600080fd5b506100fb60048036038101906100f691906107ee565b610270565b005b61012a3382858573ffffffffffffffffffffffffffffffffffffffff166102b2909392919063ffffffff16565b7f2b58128f24a9f59127cc5b5430d70542b22220f2d9adaa86e442b816ab98af603384848460405161015f9493929190610c6b565b60405180910390a1505050565b7fbcaadb46b82a48af60b608f58959ae6b8310d1b0a0d094c2e9ec3208ed39f2a03360405161019b9190610bc6565b60405180910390a1565b6101de33826002866101b79190610eef565b8573ffffffffffffffffffffffffffffffffffffffff166102b2909392919063ffffffff16565b7f2b58128f24a9f59127cc5b5430d70542b22220f2d9adaa86e442b816ab98af603360028561020d9190610eef565b848460405161021f9493929190610c6b565b60405180910390a1505050565b7f1f1ff1f5fb41346850b2f5c04e6c767e2f1c8a525c5c0c5cdb60cdf3ca5f62fa3334858585604051610263959493929190610cb0565b60405180910390a1505050565b7f74a53cd528a921fca7dbdee62f86819051d3cc98f214951f4238e8843f20b146338484846040516102a59493929190610c18565b60405180910390a1505050565b610335846323b872dd60e01b8585856040516024016102d393929190610be1565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061033b565b50505050565b600061039d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166104029092919063ffffffff16565b90506000815111156103fd57808060200190518101906103bd9190610879565b6103fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f390610d6c565b60405180910390fd5b5b505050565b6060610411848460008561041a565b90509392505050565b60608247101561045f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045690610d2c565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516104889190610baf565b60006040518083038185875af1925050503d80600081146104c5576040519150601f19603f3d011682016040523d82523d6000602084013e6104ca565b606091505b50915091506104db878383876104e7565b92505050949350505050565b6060831561054a57600083511415610542576105028561055d565b610541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053890610d4c565b60405180910390fd5b5b829050610555565b6105548383610580565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156105935781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c79190610d0a565b60405180910390fd5b60006105e36105de84610db1565b610d8c565b905080838252602082019050828560208602820111156106065761060561103e565b5b60005b8581101561065457813567ffffffffffffffff81111561062c5761062b611039565b5b80860161063989826107ab565b85526020850194506020840193505050600181019050610609565b5050509392505050565b600061067161066c84610ddd565b610d8c565b905080838252602082019050828560208602820111156106945761069361103e565b5b60005b858110156106c457816106aa88826107d9565b845260208401935060208301925050600181019050610697565b5050509392505050565b60006106e16106dc84610e09565b610d8c565b9050828152602081018484840111156106fd576106fc611043565b5b610708848285610f68565b509392505050565b60008135905061071f8161112a565b92915050565b600082601f83011261073a57610739611039565b5b813561074a8482602086016105d0565b91505092915050565b600082601f83011261076857610767611039565b5b813561077884826020860161065e565b91505092915050565b60008135905061079081611141565b92915050565b6000815190506107a581611141565b92915050565b600082601f8301126107c0576107bf611039565b5b81356107d08482602086016106ce565b91505092915050565b6000813590506107e881611158565b92915050565b6000806000606084860312156108075761080661104d565b5b600084013567ffffffffffffffff81111561082557610824611048565b5b61083186828701610725565b935050602084013567ffffffffffffffff81111561085257610851611048565b5b61085e86828701610753565b925050604061086f86828701610781565b9150509250925092565b60006020828403121561088f5761088e61104d565b5b600061089d84828501610796565b91505092915050565b6000806000606084860312156108bf576108be61104d565b5b600084013567ffffffffffffffff8111156108dd576108dc611048565b5b6108e9868287016107ab565b93505060206108fa868287016107d9565b925050604061090b86828701610781565b9150509250925092565b60008060006060848603121561092e5761092d61104d565b5b600061093c868287016107d9565b935050602061094d86828701610710565b925050604061095e86828701610710565b9150509250925092565b60006109748383610ab6565b905092915050565b60006109888383610b91565b60208301905092915050565b61099d81610f20565b82525050565b60006109ae82610e5a565b6109b88185610ea0565b9350836020820285016109ca85610e3a565b8060005b85811015610a0657848403895281516109e78582610968565b94506109f283610e86565b925060208a019950506001810190506109ce565b50829750879550505050505092915050565b6000610a2382610e65565b610a2d8185610eb1565b9350610a3883610e4a565b8060005b83811015610a69578151610a50888261097c565b9750610a5b83610e93565b925050600181019050610a3c565b5085935050505092915050565b610a7f81610f32565b82525050565b6000610a9082610e70565b610a9a8185610ec2565b9350610aaa818560208601610f77565b80840191505092915050565b6000610ac182610e7b565b610acb8185610ecd565b9350610adb818560208601610f77565b610ae481611052565b840191505092915050565b6000610afa82610e7b565b610b048185610ede565b9350610b14818560208601610f77565b610b1d81611052565b840191505092915050565b6000610b35602683610ede565b9150610b4082611063565b604082019050919050565b6000610b58601d83610ede565b9150610b63826110b2565b602082019050919050565b6000610b7b602a83610ede565b9150610b86826110db565b604082019050919050565b610b9a81610f5e565b82525050565b610ba981610f5e565b82525050565b6000610bbb8284610a85565b915081905092915050565b6000602082019050610bdb6000830184610994565b92915050565b6000606082019050610bf66000830186610994565b610c036020830185610994565b610c106040830184610ba0565b949350505050565b6000608082019050610c2d6000830187610994565b8181036020830152610c3f81866109a3565b90508181036040830152610c538185610a18565b9050610c626060830184610a76565b95945050505050565b6000608082019050610c806000830187610994565b610c8d6020830186610ba0565b610c9a6040830185610994565b610ca76060830184610994565b95945050505050565b600060a082019050610cc56000830188610994565b610cd26020830187610ba0565b8181036040830152610ce48186610aef565b9050610cf36060830185610ba0565b610d006080830184610a76565b9695505050505050565b60006020820190508181036000830152610d248184610aef565b905092915050565b60006020820190508181036000830152610d4581610b28565b9050919050565b60006020820190508181036000830152610d6581610b4b565b9050919050565b60006020820190508181036000830152610d8581610b6e565b9050919050565b6000610d96610da7565b9050610da28282610faa565b919050565b6000604051905090565b600067ffffffffffffffff821115610dcc57610dcb61100a565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610df857610df761100a565b5b602082029050602081019050919050565b600067ffffffffffffffff821115610e2457610e2361100a565b5b610e2d82611052565b9050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610efa82610f5e565b9150610f0583610f5e565b925082610f1557610f14610fdb565b5b828204905092915050565b6000610f2b82610f3e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610f95578082015181840152602081019050610f7a565b83811115610fa4576000848401525b50505050565b610fb382611052565b810181811067ffffffffffffffff82111715610fd257610fd161100a565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b61113381610f20565b811461113e57600080fd5b50565b61114a81610f32565b811461115557600080fd5b50565b61116181610f5e565b811461116c57600080fd5b5056fea26469706673582212205a3def382e6a18ce6b39ae367e4cca600f7c7bfda9ae37ba0776220198e7423b64736f6c63430008070033";

type ReceiverEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReceiverEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReceiverEVM__factory extends ContractFactory {
  constructor(...args: ReceiverEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReceiverEVM> {
    return super.deploy(overrides || {}) as Promise<ReceiverEVM>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReceiverEVM {
    return super.attach(address) as ReceiverEVM;
  }
  override connect(signer: Signer): ReceiverEVM__factory {
    return super.connect(signer) as ReceiverEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReceiverEVMInterface {
    return new utils.Interface(_abi) as ReceiverEVMInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReceiverEVM {
    return new Contract(address, _abi, signerOrProvider) as ReceiverEVM;
  }
}
