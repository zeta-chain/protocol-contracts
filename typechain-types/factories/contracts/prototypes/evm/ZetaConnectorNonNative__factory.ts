/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ZetaConnectorNonNative,
  ZetaConnectorNonNativeInterface,
} from "../../../../contracts/prototypes/evm/ZetaConnectorNonNative";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
      {
        internalType: "address",
        name: "_zetaToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tssAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSender",
    type: "error",
  },
  {
    inputs: [],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "WithdrawAndCall",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "WithdrawAndRevert",
    type: "event",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "contract IGatewayEVM",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "receiveTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tssAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "internalSendHash",
        type: "bytes32",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "internalSendHash",
        type: "bytes32",
      },
    ],
    name: "withdrawAndCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "internalSendHash",
        type: "bytes32",
      },
    ],
    name: "withdrawAndRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "zetaToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162000eed38038062000eed8339818101604052810190620000379190620001ab565b8282826001600081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161480620000aa5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b80620000e25750600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b156200011a576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1660601b815250505050505050506200025a565b600081519050620001a58162000240565b92915050565b600080600060608486031215620001c757620001c66200023b565b5b6000620001d78682870162000194565b9350506020620001ea8682870162000194565b9250506040620001fd8682870162000194565b9150509250925092565b600062000214826200021b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200024b8162000207565b81146200025757600080fd5b50565b60805160601c60a05160601c610c21620002cc6000396000818161015601528181610241015281816103210152818161042f015281816104810152818161056c0152610644015260008181610192015281816102050152818161040b015281816104bd01526105300152610c216000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806321e093b11161005b57806321e093b1146100d85780635b112591146100f65780635e3e9fef14610114578063743e0c9b146101305761007d565b806302d5c89914610082578063106e62901461009e578063116191b6146100ba575b600080fd5b61009c60048036038101906100979190610814565b61014c565b005b6100b860048036038101906100b391906107c1565b610317565b005b6100c2610409565b6040516100cf9190610a1e565b60405180910390f35b6100e061042d565b6040516100ed9190610955565b60405180910390f35b6100fe610451565b60405161010b9190610955565b60405180910390f35b61012e60048036038101906101299190610814565b610477565b005b61014a6004803603810190610145919061089c565b610642565b005b6101546106d2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631e458bee7f000000000000000000000000000000000000000000000000000000000000000086846040518463ffffffff1660e01b81526004016101d1939291906109e7565b600060405180830381600087803b1580156101eb57600080fd5b505af11580156101ff573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b8969bd47f0000000000000000000000000000000000000000000000000000000000000000878787876040518663ffffffff1660e01b8152600401610284959493929190610970565b600060405180830381600087803b15801561029e57600080fd5b505af11580156102b2573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff167fba96f26bdda53eb8c8ba39045dfb4ff39753fbc7a6edcf250a88e75e78d102fe85858560405161030093929190610a74565b60405180910390a2610310610722565b5050505050565b61031f6106d2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631e458bee8484846040518463ffffffff1660e01b815260040161037c939291906109e7565b600060405180830381600087803b15801561039657600080fd5b505af11580156103aa573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a9424364836040516103f49190610a59565b60405180910390a2610404610722565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61047f6106d2565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631e458bee7f000000000000000000000000000000000000000000000000000000000000000086846040518463ffffffff1660e01b81526004016104fc939291906109e7565b600060405180830381600087803b15801561051657600080fd5b505af115801561052a573d6000803e3d6000fd5b505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635131ab597f0000000000000000000000000000000000000000000000000000000000000000878787876040518663ffffffff1660e01b81526004016105af959493929190610970565b600060405180830381600087803b1580156105c957600080fd5b505af11580156105dd573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff167f7772f56296d3a5202974a45c61c9188d844ab4d6eeb18c851e4b8d5384ca6ced85858560405161062b93929190610a74565b60405180910390a261063b610722565b5050505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166379cc679033836040518363ffffffff1660e01b815260040161069d9291906109be565b600060405180830381600087803b1580156106b757600080fd5b505af11580156106cb573d6000803e3d6000fd5b5050505050565b60026000541415610718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070f90610a39565b60405180910390fd5b6002600081905550565b6001600081905550565b60008135905061073b81610ba6565b92915050565b60008135905061075081610bbd565b92915050565b60008083601f84011261076c5761076b610b58565b5b8235905067ffffffffffffffff81111561078957610788610b53565b5b6020830191508360018202830111156107a5576107a4610b5d565b5b9250929050565b6000813590506107bb81610bd4565b92915050565b6000806000606084860312156107da576107d9610b67565b5b60006107e88682870161072c565b93505060206107f9868287016107ac565b925050604061080a86828701610741565b9150509250925092565b6000806000806000608086880312156108305761082f610b67565b5b600061083e8882890161072c565b955050602061084f888289016107ac565b945050604086013567ffffffffffffffff8111156108705761086f610b62565b5b61087c88828901610756565b9350935050606061088f88828901610741565b9150509295509295909350565b6000602082840312156108b2576108b1610b67565b5b60006108c0848285016107ac565b91505092915050565b6108d281610ac8565b82525050565b6108e181610ada565b82525050565b60006108f38385610aa6565b9350610900838584610b44565b61090983610b6c565b840190509392505050565b61091d81610b0e565b82525050565b6000610930601f83610ab7565b915061093b82610b7d565b602082019050919050565b61094f81610b04565b82525050565b600060208201905061096a60008301846108c9565b92915050565b600060808201905061098560008301886108c9565b61099260208301876108c9565b61099f6040830186610946565b81810360608301526109b28184866108e7565b90509695505050505050565b60006040820190506109d360008301856108c9565b6109e06020830184610946565b9392505050565b60006060820190506109fc60008301866108c9565b610a096020830185610946565b610a1660408301846108d8565b949350505050565b6000602082019050610a336000830184610914565b92915050565b60006020820190508181036000830152610a5281610923565b9050919050565b6000602082019050610a6e6000830184610946565b92915050565b6000604082019050610a896000830186610946565b8181036020830152610a9c8184866108e7565b9050949350505050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610ad382610ae4565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b1982610b20565b9050919050565b6000610b2b82610b32565b9050919050565b6000610b3d82610ae4565b9050919050565b82818337600083830152505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b610baf81610ac8565b8114610bba57600080fd5b50565b610bc681610ada565b8114610bd157600080fd5b50565b610bdd81610b04565b8114610be857600080fd5b5056fea264697066735822122053fd60fbc685af8498c80af0717c1c37738558c0c31648ff6836e9afd85bce3064736f6c63430008070033";

type ZetaConnectorNonNativeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZetaConnectorNonNativeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZetaConnectorNonNative__factory extends ContractFactory {
  constructor(...args: ZetaConnectorNonNativeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gateway: PromiseOrValue<string>,
    _zetaToken: PromiseOrValue<string>,
    _tssAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZetaConnectorNonNative> {
    return super.deploy(
      _gateway,
      _zetaToken,
      _tssAddress,
      overrides || {}
    ) as Promise<ZetaConnectorNonNative>;
  }
  override getDeployTransaction(
    _gateway: PromiseOrValue<string>,
    _zetaToken: PromiseOrValue<string>,
    _tssAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _gateway,
      _zetaToken,
      _tssAddress,
      overrides || {}
    );
  }
  override attach(address: string): ZetaConnectorNonNative {
    return super.attach(address) as ZetaConnectorNonNative;
  }
  override connect(signer: Signer): ZetaConnectorNonNative__factory {
    return super.connect(signer) as ZetaConnectorNonNative__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZetaConnectorNonNativeInterface {
    return new utils.Interface(_abi) as ZetaConnectorNonNativeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZetaConnectorNonNative {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ZetaConnectorNonNative;
  }
}
