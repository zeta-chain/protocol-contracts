/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Gateway,
  GatewayInterface,
} from "../../../contracts/prototypes/Gateway";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "Forwarded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "destination",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "forwardCall",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104d0806100206000396000f3fe60806040526004361061001e5760003560e01c806322bee49414610023575b600080fd5b61003d600480360381019061003891906101d0565b610053565b60405161004a9190610306565b60405180910390f35b60606000808573ffffffffffffffffffffffffffffffffffffffff163486866040516100809291906102ed565b60006040518083038185875af1925050503d80600081146100bd576040519150601f19603f3d011682016040523d82523d6000602084013e6100c2565b606091505b509150915081610107576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100fe90610328565b60405180910390fd5b8573ffffffffffffffffffffffffffffffffffffffff167fc1de93dfa06362c6a616cde73ec17d116c0d588dd1df70f27f91b500de207c4134878760405161015193929190610348565b60405180910390a280925050509392505050565b60008135905061017481610483565b92915050565b60008083601f8401126101905761018f610435565b5b8235905067ffffffffffffffff8111156101ad576101ac610430565b5b6020830191508360018202830111156101c9576101c861043a565b5b9250929050565b6000806000604084860312156101e9576101e8610444565b5b60006101f786828701610165565b935050602084013567ffffffffffffffff8111156102185761021761043f565b5b6102248682870161017a565b92509250509250925092565b600061023c8385610385565b93506102498385846103ee565b61025283610449565b840190509392505050565b60006102698385610396565b93506102768385846103ee565b82840190509392505050565b600061028d8261037a565b6102978185610385565b93506102a78185602086016103fd565b6102b081610449565b840191505092915050565b60006102c8600b836103a1565b91506102d38261045a565b602082019050919050565b6102e7816103e4565b82525050565b60006102fa82848661025d565b91508190509392505050565b600060208201905081810360008301526103208184610282565b905092915050565b60006020820190508181036000830152610341816102bb565b9050919050565b600060408201905061035d60008301866102de565b8181036020830152610370818486610230565b9050949350505050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b60006103bd826103c4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561041b578082015181840152602081019050610400565b8381111561042a576000848401525b50505050565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b61048c816103b2565b811461049757600080fd5b5056fea2646970667358221220c44eb350867255a4dcf321a851ce03d409f436ff506f33df5244731cd237fa9064736f6c63430008070033";

type GatewayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatewayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Gateway__factory extends ContractFactory {
  constructor(...args: GatewayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Gateway> {
    return super.deploy(overrides || {}) as Promise<Gateway>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Gateway {
    return super.attach(address) as Gateway;
  }
  override connect(signer: Signer): Gateway__factory {
    return super.connect(signer) as Gateway__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatewayInterface {
    return new utils.Interface(_abi) as GatewayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Gateway {
    return new Contract(address, _abi, signerOrProvider) as Gateway;
  }
}
