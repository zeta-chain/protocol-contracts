/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestZContract,
  TestZContractInterface,
} from "../../../../contracts/prototypes/zevm/TestZContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "origin",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "ContextData",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "origin",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
        ],
        internalType: "struct zContext",
        name: "context",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "onCrossChainCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes",
            name: "origin",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "chainID",
            type: "uint256",
          },
        ],
        internalType: "struct revertContext",
        name: "context",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "zrc20",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "onRevert",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506107cb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806369582bee1461003b578063de43156e14610057575b600080fd5b61005560048036038101906100509190610331565b610073565b005b610071600480360381019061006c91906103d5565b610100565b005b6060600083839050111561009357828281019061009091906102e8565b90505b7fcdc8ee677dc5ebe680fb18cebda5e26ba5ea1f0ba504a47e2a9a2ecb476dc98e8680600001906100c49190610560565b8860200160208101906100d791906102bb565b896040013533866040516100f0969594939291906104fd565b60405180910390a1505050505050565b6060600083839050111561012057828281019061011d91906102e8565b90505b7fcdc8ee677dc5ebe680fb18cebda5e26ba5ea1f0ba504a47e2a9a2ecb476dc98e8680600001906101519190610560565b88602001602081019061016491906102bb565b8960400135338660405161017d969594939291906104fd565b60405180910390a1505050505050565b60006101a061019b846105e8565b6105c3565b9050828152602081018484840111156101bc576101bb610747565b5b6101c7848285610682565b509392505050565b6000813590506101de81610767565b92915050565b60008083601f8401126101fa576101f9610729565b5b8235905067ffffffffffffffff81111561021757610216610724565b5b6020830191508360018202830111156102335761023261073d565b5b9250929050565b600082601f83011261024f5761024e610729565b5b813561025f84826020860161018d565b91505092915050565b60006060828403121561027e5761027d610733565b5b81905092915050565b60006060828403121561029d5761029c610733565b5b81905092915050565b6000813590506102b58161077e565b92915050565b6000602082840312156102d1576102d0610751565b5b60006102df848285016101cf565b91505092915050565b6000602082840312156102fe576102fd610751565b5b600082013567ffffffffffffffff81111561031c5761031b61074c565b5b6103288482850161023a565b91505092915050565b60008060008060006080868803121561034d5761034c610751565b5b600086013567ffffffffffffffff81111561036b5761036a61074c565b5b61037788828901610268565b9550506020610388888289016101cf565b9450506040610399888289016102a6565b935050606086013567ffffffffffffffff8111156103ba576103b961074c565b5b6103c6888289016101e4565b92509250509295509295909350565b6000806000806000608086880312156103f1576103f0610751565b5b600086013567ffffffffffffffff81111561040f5761040e61074c565b5b61041b88828901610287565b955050602061042c888289016101cf565b945050604061043d888289016102a6565b935050606086013567ffffffffffffffff81111561045e5761045d61074c565b5b61046a888289016101e4565b92509250509295509295909350565b61048281610646565b82525050565b60006104948385610624565b93506104a1838584610682565b6104aa83610756565b840190509392505050565b60006104c082610619565b6104ca8185610635565b93506104da818560208601610691565b6104e381610756565b840191505092915050565b6104f781610678565b82525050565b600060a082019050818103600083015261051881888a610488565b90506105276020830187610479565b61053460408301866104ee565b6105416060830185610479565b818103608083015261055381846104b5565b9050979650505050505050565b6000808335600160200384360303811261057d5761057c610738565b5b80840192508235915067ffffffffffffffff82111561059f5761059e61072e565b5b6020830192506001820236038313156105bb576105ba610742565b5b509250929050565b60006105cd6105de565b90506105d982826106c4565b919050565b6000604051905090565b600067ffffffffffffffff821115610603576106026106f5565b5b61060c82610756565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061065182610658565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156106af578082015181840152602081019050610694565b838111156106be576000848401525b50505050565b6106cd82610756565b810181811067ffffffffffffffff821117156106ec576106eb6106f5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61077081610646565b811461077b57600080fd5b50565b61078781610678565b811461079257600080fd5b5056fea2646970667358221220996d3660341a1bd04005b32d62cd8d770a9af1acdfbed4e5684f1a111d225cde64736f6c63430008070033";

type TestZContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestZContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestZContract__factory extends ContractFactory {
  constructor(...args: TestZContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestZContract> {
    return super.deploy(overrides || {}) as Promise<TestZContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestZContract {
    return super.attach(address) as TestZContract;
  }
  override connect(signer: Signer): TestZContract__factory {
    return super.connect(signer) as TestZContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestZContractInterface {
    return new utils.Interface(_abi) as TestZContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestZContract {
    return new Contract(address, _abi, signerOrProvider) as TestZContract;
  }
}
