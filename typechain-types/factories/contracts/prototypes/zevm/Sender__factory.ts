/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  Sender,
  SenderInterface,
} from "../../../../contracts/prototypes/zevm/Sender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gateway",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes",
        name: "receiver",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "Call",
    type: "event",
  },
  {
    inputs: [],
    name: "gateway",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "receiver",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "num",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "flag",
        type: "bool",
      },
    ],
    name: "sendToReceiver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516107e43803806107e48339818101604052810190610032919061008d565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600081519050610087816100f1565b92915050565b6000602082840312156100a3576100a26100ec565b5b60006100b184828501610078565b91505092915050565b60006100c5826100cc565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6100fa816100ba565b811461010557600080fd5b50565b6106cd806101176000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063116191b61461003b578063f948d35914610059575b600080fd5b610043610075565b604051610050919061040b565b60405180910390f35b610073600480360381019061006e91906102cd565b610099565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008383836040516024016100b09392919061045d565b6040516020818303038152906040527f6fa220ad000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630ac7c44c86836040518363ffffffff1660e01b815260040161018a929190610426565b600060405180830381600087803b1580156101a457600080fd5b505af11580156101b8573d6000803e3d6000fd5b505050505050505050565b60006101d66101d1846104c0565b61049b565b9050828152602081018484840111156101f2576101f1610649565b5b6101fd8482856105a2565b509392505050565b6000610218610213846104f1565b61049b565b90508281526020810184848401111561023457610233610649565b5b61023f8482856105a2565b509392505050565b60008135905061025681610669565b92915050565b600082601f83011261027157610270610644565b5b81356102818482602086016101c3565b91505092915050565b600082601f83011261029f5761029e610644565b5b81356102af848260208601610205565b91505092915050565b6000813590506102c781610680565b92915050565b600080600080608085870312156102e7576102e6610653565b5b600085013567ffffffffffffffff8111156103055761030461064e565b5b6103118782880161025c565b945050602085013567ffffffffffffffff8111156103325761033161064e565b5b61033e8782880161028a565b935050604061034f878288016102b8565b925050606061036087828801610247565b91505092959194509250565b6103758161055a565b82525050565b6103848161056c565b82525050565b600061039582610522565b61039f8185610538565b93506103af8185602086016105b1565b6103b881610658565b840191505092915050565b60006103ce8261052d565b6103d88185610549565b93506103e88185602086016105b1565b6103f181610658565b840191505092915050565b61040581610598565b82525050565b6000602082019050610420600083018461036c565b92915050565b60006040820190508181036000830152610440818561038a565b90508181036020830152610454818461038a565b90509392505050565b6000606082019050818103600083015261047781866103c3565b905061048660208301856103fc565b610493604083018461037b565b949350505050565b60006104a56104b6565b90506104b182826105e4565b919050565b6000604051905090565b600067ffffffffffffffff8211156104db576104da610615565b5b6104e482610658565b9050602081019050919050565b600067ffffffffffffffff82111561050c5761050b610615565b5b61051582610658565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061056582610578565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156105cf5780820151818401526020810190506105b4565b838111156105de576000848401525b50505050565b6105ed82610658565b810181811067ffffffffffffffff8211171561060c5761060b610615565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6106728161056c565b811461067d57600080fd5b50565b61068981610598565b811461069457600080fd5b5056fea2646970667358221220cdaccd861067daccfac02009db402ee2d2aca72fb7ae4d1786005c3b291c2e3b64736f6c63430008070033";

type SenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sender__factory extends ContractFactory {
  constructor(...args: SenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _gateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Sender> {
    return super.deploy(_gateway, overrides || {}) as Promise<Sender>;
  }
  override getDeployTransaction(
    _gateway: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gateway, overrides || {});
  }
  override attach(address: string): Sender {
    return super.attach(address) as Sender;
  }
  override connect(signer: Signer): Sender__factory {
    return super.connect(signer) as Sender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SenderInterface {
    return new utils.Interface(_abi) as SenderInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Sender {
    return new Contract(address, _abi, signerOrProvider) as Sender;
  }
}
