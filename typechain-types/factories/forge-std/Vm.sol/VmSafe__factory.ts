/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { VmSafe, VmSafeInterface } from "../../../forge-std/Vm.sol/VmSafe";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "accesses",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "readSlots",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "writeSlots",
        type: "bytes32[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
    ],
    name: "addr",
    outputs: [
      {
        internalType: "address",
        name: "keyAddr",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDelta",
        type: "uint256",
      },
    ],
    name: "assertApproxEqAbs",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxDelta",
        type: "uint256",
      },
    ],
    name: "assertApproxEqAbs",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxDelta",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertApproxEqAbs",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDelta",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertApproxEqAbs",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertApproxEqAbsDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertApproxEqAbsDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertApproxEqAbsDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertApproxEqAbsDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPercentDelta",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertApproxEqRel",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPercentDelta",
        type: "uint256",
      },
    ],
    name: "assertApproxEqRel",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxPercentDelta",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertApproxEqRel",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxPercentDelta",
        type: "uint256",
      },
    ],
    name: "assertApproxEqRel",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPercentDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertApproxEqRelDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxPercentDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertApproxEqRelDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxPercentDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertApproxEqRelDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "maxPercentDelta",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertApproxEqRelDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "left",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "right",
        type: "bytes32[]",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256[]",
        name: "left",
        type: "int256[]",
      },
      {
        internalType: "int256[]",
        name: "right",
        type: "int256[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "left",
        type: "address",
      },
      {
        internalType: "address",
        name: "right",
        type: "address",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "left",
        type: "string",
      },
      {
        internalType: "string",
        name: "right",
        type: "string",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "left",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "right",
        type: "address[]",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "left",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "right",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "left",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "right",
        type: "bool",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "left",
        type: "address",
      },
      {
        internalType: "address",
        name: "right",
        type: "address",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "left",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "right",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool[]",
        name: "left",
        type: "bool[]",
      },
      {
        internalType: "bool[]",
        name: "right",
        type: "bool[]",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256[]",
        name: "left",
        type: "int256[]",
      },
      {
        internalType: "int256[]",
        name: "right",
        type: "int256[]",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "right",
        type: "bytes32",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "left",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "right",
        type: "uint256[]",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "left",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "right",
        type: "bytes",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "right",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "left",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "right",
        type: "string[]",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "left",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "right",
        type: "bytes32[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "left",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "right",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool[]",
        name: "left",
        type: "bool[]",
      },
      {
        internalType: "bool[]",
        name: "right",
        type: "bool[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "left",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "right",
        type: "bytes[]",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "left",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "right",
        type: "string[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "left",
        type: "string",
      },
      {
        internalType: "string",
        name: "right",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "left",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "right",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "left",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "right",
        type: "bool",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
    ],
    name: "assertEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertEqDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertEqDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEqDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertEqDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "condition",
        type: "bool",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertFalse",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "condition",
        type: "bool",
      },
    ],
    name: "assertFalse",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
    ],
    name: "assertGe",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertGe",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "assertGe",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertGe",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertGeDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertGeDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertGeDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertGeDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
    ],
    name: "assertGt",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertGt",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "assertGt",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertGt",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertGtDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertGtDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertGtDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertGtDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertLe",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "assertLe",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
    ],
    name: "assertLe",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertLe",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertLeDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertLeDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertLeDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertLeDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
    ],
    name: "assertLt",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertLt",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertLt",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "assertLt",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertLtDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertLtDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertLtDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertLtDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "left",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "right",
        type: "bytes32[]",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256[]",
        name: "left",
        type: "int256[]",
      },
      {
        internalType: "int256[]",
        name: "right",
        type: "int256[]",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "left",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "right",
        type: "bool",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "left",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "right",
        type: "bytes[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "left",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "right",
        type: "bool",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool[]",
        name: "left",
        type: "bool[]",
      },
      {
        internalType: "bool[]",
        name: "right",
        type: "bool[]",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "left",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "right",
        type: "bytes",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "left",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "right",
        type: "address[]",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "left",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "right",
        type: "uint256[]",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool[]",
        name: "left",
        type: "bool[]",
      },
      {
        internalType: "bool[]",
        name: "right",
        type: "bool[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "left",
        type: "string",
      },
      {
        internalType: "string",
        name: "right",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "left",
        type: "address[]",
      },
      {
        internalType: "address[]",
        name: "right",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "left",
        type: "string",
      },
      {
        internalType: "string",
        name: "right",
        type: "string",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "left",
        type: "address",
      },
      {
        internalType: "address",
        name: "right",
        type: "address",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "right",
        type: "bytes32",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "left",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "right",
        type: "bytes",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "left",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "right",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "left",
        type: "address",
      },
      {
        internalType: "address",
        name: "right",
        type: "address",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "left",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "right",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "left",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "right",
        type: "string[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "left",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32[]",
        name: "right",
        type: "bytes32[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "left",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "right",
        type: "string[]",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256[]",
        name: "left",
        type: "int256[]",
      },
      {
        internalType: "int256[]",
        name: "right",
        type: "int256[]",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "left",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "right",
        type: "bytes[]",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
    ],
    name: "assertNotEq",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertNotEqDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "left",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "right",
        type: "int256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEqDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "assertNotEqDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "left",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "right",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertNotEqDecimal",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "condition",
        type: "bool",
      },
    ],
    name: "assertTrue",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "condition",
        type: "bool",
      },
      {
        internalType: "string",
        name: "error",
        type: "string",
      },
    ],
    name: "assertTrue",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "condition",
        type: "bool",
      },
    ],
    name: "assume",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "char",
        type: "string",
      },
    ],
    name: "breakpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "char",
        type: "string",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "breakpoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "broadcast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "broadcast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
    ],
    name: "broadcast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "closeFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "initCodeHash",
        type: "bytes32",
      },
    ],
    name: "computeCreate2Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "initCodeHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    name: "computeCreate2Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "computeCreateAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "from",
        type: "string",
      },
      {
        internalType: "string",
        name: "to",
        type: "string",
      },
    ],
    name: "copyFile",
    outputs: [
      {
        internalType: "uint64",
        name: "copied",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
      {
        internalType: "bool",
        name: "recursive",
        type: "bool",
      },
    ],
    name: "createDir",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "walletLabel",
        type: "string",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "publicKeyX",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicKeyY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "privateKey",
            type: "uint256",
          },
        ],
        internalType: "struct VmSafe.Wallet",
        name: "wallet",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "publicKeyX",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicKeyY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "privateKey",
            type: "uint256",
          },
        ],
        internalType: "struct VmSafe.Wallet",
        name: "wallet",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "walletLabel",
        type: "string",
      },
    ],
    name: "createWallet",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "publicKeyX",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicKeyY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "privateKey",
            type: "uint256",
          },
        ],
        internalType: "struct VmSafe.Wallet",
        name: "wallet",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "mnemonic",
        type: "string",
      },
      {
        internalType: "string",
        name: "derivationPath",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "language",
        type: "string",
      },
    ],
    name: "deriveKey",
    outputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "mnemonic",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "language",
        type: "string",
      },
    ],
    name: "deriveKey",
    outputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "mnemonic",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "deriveKey",
    outputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "mnemonic",
        type: "string",
      },
      {
        internalType: "string",
        name: "derivationPath",
        type: "string",
      },
      {
        internalType: "uint32",
        name: "index",
        type: "uint32",
      },
    ],
    name: "deriveKey",
    outputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "ensNamehash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "envAddress",
    outputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
    ],
    name: "envAddress",
    outputs: [
      {
        internalType: "address[]",
        name: "value",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "envBool",
    outputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
    ],
    name: "envBool",
    outputs: [
      {
        internalType: "bool[]",
        name: "value",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "envBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
    ],
    name: "envBytes",
    outputs: [
      {
        internalType: "bytes[]",
        name: "value",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
    ],
    name: "envBytes32",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "value",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "envBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "envExists",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
    ],
    name: "envInt",
    outputs: [
      {
        internalType: "int256[]",
        name: "value",
        type: "int256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "envInt",
    outputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
      {
        internalType: "bytes32[]",
        name: "defaultValue",
        type: "bytes32[]",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "value",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
      {
        internalType: "int256[]",
        name: "defaultValue",
        type: "int256[]",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "int256[]",
        name: "value",
        type: "int256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bool",
        name: "defaultValue",
        type: "bool",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "defaultValue",
        type: "address",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "defaultValue",
        type: "uint256",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
      {
        internalType: "bytes[]",
        name: "defaultValue",
        type: "bytes[]",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "bytes[]",
        name: "value",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "defaultValue",
        type: "uint256[]",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "defaultValue",
        type: "string[]",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "string[]",
        name: "value",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "defaultValue",
        type: "bytes",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "defaultValue",
        type: "bytes32",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "int256",
        name: "defaultValue",
        type: "int256",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "defaultValue",
        type: "address[]",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "address[]",
        name: "value",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "defaultValue",
        type: "string",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
      {
        internalType: "bool[]",
        name: "defaultValue",
        type: "bool[]",
      },
    ],
    name: "envOr",
    outputs: [
      {
        internalType: "bool[]",
        name: "value",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
    ],
    name: "envString",
    outputs: [
      {
        internalType: "string[]",
        name: "value",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "envString",
    outputs: [
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "envUint",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "delim",
        type: "string",
      },
    ],
    name: "envUint",
    outputs: [
      {
        internalType: "uint256[]",
        name: "value",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "fromBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "toBlock",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "topics",
        type: "bytes32[]",
      },
    ],
    name: "eth_getLogs",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "emitter",
            type: "address",
          },
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "blockHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "blockNumber",
            type: "uint64",
          },
          {
            internalType: "bytes32",
            name: "transactionHash",
            type: "bytes32",
          },
          {
            internalType: "uint64",
            name: "transactionIndex",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "logIndex",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "removed",
            type: "bool",
          },
        ],
        internalType: "struct VmSafe.EthGetLogs[]",
        name: "logs",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "commandInput",
        type: "string[]",
      },
    ],
    name: "ffi",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "fsMetadata",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isDir",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSymlink",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "readOnly",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "modified",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accessed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "created",
            type: "uint256",
          },
        ],
        internalType: "struct VmSafe.FsMetadata",
        name: "metadata",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlobBaseFee",
    outputs: [
      {
        internalType: "uint256",
        name: "blobBaseFee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "height",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "artifactPath",
        type: "string",
      },
    ],
    name: "getCode",
    outputs: [
      {
        internalType: "bytes",
        name: "creationBytecode",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "artifactPath",
        type: "string",
      },
    ],
    name: "getDeployedCode",
    outputs: [
      {
        internalType: "bytes",
        name: "runtimeBytecode",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getLabel",
    outputs: [
      {
        internalType: "string",
        name: "currentLabel",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "elementSlot",
        type: "bytes32",
      },
    ],
    name: "getMappingKeyAndParentOf",
    outputs: [
      {
        internalType: "bool",
        name: "found",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "parent",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mappingSlot",
        type: "bytes32",
      },
    ],
    name: "getMappingLength",
    outputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "mappingSlot",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
    ],
    name: "getMappingSlotAt",
    outputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "publicKeyX",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicKeyY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "privateKey",
            type: "uint256",
          },
        ],
        internalType: "struct VmSafe.Wallet",
        name: "wallet",
        type: "tuple",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint64",
        name: "nonce",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRecordedLogs",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32[]",
            name: "topics",
            type: "bytes32[]",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "address",
            name: "emitter",
            type: "address",
          },
        ],
        internalType: "struct VmSafe.Log[]",
        name: "logs",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "indexOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum VmSafe.ForgeContext",
        name: "context",
        type: "uint8",
      },
    ],
    name: "isContext",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "isDir",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "isFile",
    outputs: [
      {
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "keyExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "keyExistsJson",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "keyExistsToml",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "string",
        name: "newLabel",
        type: "string",
      },
    ],
    name: "label",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lastCallGas",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "gasLimit",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "gasTotalUsed",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "gasMemoryUsed",
            type: "uint64",
          },
          {
            internalType: "int64",
            name: "gasRefunded",
            type: "int64",
          },
          {
            internalType: "uint64",
            name: "gasRemaining",
            type: "uint64",
          },
        ],
        internalType: "struct VmSafe.Gas",
        name: "gas",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "load",
    outputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    name: "parseAddress",
    outputs: [
      {
        internalType: "address",
        name: "parsedValue",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    name: "parseBool",
    outputs: [
      {
        internalType: "bool",
        name: "parsedValue",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    name: "parseBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "parsedValue",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    name: "parseBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "parsedValue",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    name: "parseInt",
    outputs: [
      {
        internalType: "int256",
        name: "parsedValue",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    name: "parseJson",
    outputs: [
      {
        internalType: "bytes",
        name: "abiEncodedData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJson",
    outputs: [
      {
        internalType: "bytes",
        name: "abiEncodedData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonAddressArray",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonBool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonBoolArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonBytes32Array",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonBytesArray",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonInt",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonIntArray",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonKeys",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonStringArray",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseJsonUintArray",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseToml",
    outputs: [
      {
        internalType: "bytes",
        name: "abiEncodedData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
    ],
    name: "parseToml",
    outputs: [
      {
        internalType: "bytes",
        name: "abiEncodedData",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlAddressArray",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlBool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlBoolArray",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlBytes",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlBytes32Array",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlBytesArray",
    outputs: [
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlInt",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlIntArray",
    outputs: [
      {
        internalType: "int256[]",
        name: "",
        type: "int256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlKeys",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlString",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlStringArray",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "toml",
        type: "string",
      },
      {
        internalType: "string",
        name: "key",
        type: "string",
      },
    ],
    name: "parseTomlUintArray",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    name: "parseUint",
    outputs: [
      {
        internalType: "uint256",
        name: "parsedValue",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseGasMetering",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "projectRoot",
    outputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "promptText",
        type: "string",
      },
    ],
    name: "prompt",
    outputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "promptText",
        type: "string",
      },
    ],
    name: "promptAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "promptText",
        type: "string",
      },
    ],
    name: "promptSecret",
    outputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "promptText",
        type: "string",
      },
    ],
    name: "promptSecretUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "promptText",
        type: "string",
      },
    ],
    name: "promptUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "randomAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "randomUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "min",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "max",
        type: "uint256",
      },
    ],
    name: "randomUint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "maxDepth",
        type: "uint64",
      },
    ],
    name: "readDir",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "errorMessage",
            type: "string",
          },
          {
            internalType: "string",
            name: "path",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "depth",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isDir",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSymlink",
            type: "bool",
          },
        ],
        internalType: "struct VmSafe.DirEntry[]",
        name: "entries",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
      {
        internalType: "uint64",
        name: "maxDepth",
        type: "uint64",
      },
      {
        internalType: "bool",
        name: "followLinks",
        type: "bool",
      },
    ],
    name: "readDir",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "errorMessage",
            type: "string",
          },
          {
            internalType: "string",
            name: "path",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "depth",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isDir",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSymlink",
            type: "bool",
          },
        ],
        internalType: "struct VmSafe.DirEntry[]",
        name: "entries",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "readDir",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "errorMessage",
            type: "string",
          },
          {
            internalType: "string",
            name: "path",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "depth",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isDir",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isSymlink",
            type: "bool",
          },
        ],
        internalType: "struct VmSafe.DirEntry[]",
        name: "entries",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "readFile",
    outputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "readFileBinary",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "readLine",
    outputs: [
      {
        internalType: "string",
        name: "line",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "linkPath",
        type: "string",
      },
    ],
    name: "readLink",
    outputs: [
      {
        internalType: "string",
        name: "targetPath",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "record",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "recordLogs",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
    ],
    name: "rememberKey",
    outputs: [
      {
        internalType: "address",
        name: "keyAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
      {
        internalType: "bool",
        name: "recursive",
        type: "bool",
      },
    ],
    name: "removeDir",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "removeFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
      {
        internalType: "string",
        name: "from",
        type: "string",
      },
      {
        internalType: "string",
        name: "to",
        type: "string",
      },
    ],
    name: "replace",
    outputs: [
      {
        internalType: "string",
        name: "output",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "resumeGasMetering",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "method",
        type: "string",
      },
      {
        internalType: "string",
        name: "params",
        type: "string",
      },
    ],
    name: "rpc",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "rpcAlias",
        type: "string",
      },
    ],
    name: "rpcUrl",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rpcUrlStructs",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "key",
            type: "string",
          },
          {
            internalType: "string",
            name: "url",
            type: "string",
          },
        ],
        internalType: "struct VmSafe.Rpc[]",
        name: "urls",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rpcUrls",
    outputs: [
      {
        internalType: "string[2][]",
        name: "urls",
        type: "string[2][]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "address[]",
        name: "values",
        type: "address[]",
      },
    ],
    name: "serializeAddress",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "serializeAddress",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "bool[]",
        name: "values",
        type: "bool[]",
      },
    ],
    name: "serializeBool",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "serializeBool",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "bytes[]",
        name: "values",
        type: "bytes[]",
      },
    ],
    name: "serializeBytes",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "serializeBytes",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "bytes32[]",
        name: "values",
        type: "bytes32[]",
      },
    ],
    name: "serializeBytes32",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "serializeBytes32",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
    ],
    name: "serializeInt",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "int256[]",
        name: "values",
        type: "int256[]",
      },
    ],
    name: "serializeInt",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "serializeJson",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "values",
        type: "string[]",
      },
    ],
    name: "serializeString",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "serializeString",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "serializeUint",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "serializeUint",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "objectKey",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "serializeUintToHex",
    outputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "value",
        type: "string",
      },
    ],
    name: "setEnv",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "publicKeyX",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicKeyY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "privateKey",
            type: "uint256",
          },
        ],
        internalType: "struct VmSafe.Wallet",
        name: "wallet",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
    ],
    name: "sign",
    outputs: [
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "digest",
        type: "bytes32",
      },
    ],
    name: "signP256",
    outputs: [
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "sleep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
      {
        internalType: "string",
        name: "delimiter",
        type: "string",
      },
    ],
    name: "split",
    outputs: [
      {
        internalType: "string[]",
        name: "outputs",
        type: "string[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "startBroadcast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "startBroadcast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "privateKey",
        type: "uint256",
      },
    ],
    name: "startBroadcast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startMappingRecording",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startStateDiffRecording",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopAndReturnStateDiff",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "forkId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
              },
            ],
            internalType: "struct VmSafe.ChainInfo",
            name: "chainInfo",
            type: "tuple",
          },
          {
            internalType: "enum VmSafe.AccountAccessKind",
            name: "kind",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "account",
            type: "address",
          },
          {
            internalType: "address",
            name: "accessor",
            type: "address",
          },
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "oldBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "newBalance",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "deployedCode",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "reverted",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "address",
                name: "account",
                type: "address",
              },
              {
                internalType: "bytes32",
                name: "slot",
                type: "bytes32",
              },
              {
                internalType: "bool",
                name: "isWrite",
                type: "bool",
              },
              {
                internalType: "bytes32",
                name: "previousValue",
                type: "bytes32",
              },
              {
                internalType: "bytes32",
                name: "newValue",
                type: "bytes32",
              },
              {
                internalType: "bool",
                name: "reverted",
                type: "bool",
              },
            ],
            internalType: "struct VmSafe.StorageAccess[]",
            name: "storageAccesses",
            type: "tuple[]",
          },
          {
            internalType: "uint64",
            name: "depth",
            type: "uint64",
          },
        ],
        internalType: "struct VmSafe.AccountAccess[]",
        name: "accountAccesses",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopBroadcast",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stopMappingRecording",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "toBase64",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "toBase64",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "toBase64URL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "toBase64URL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
    ],
    name: "toLowercase",
    outputs: [
      {
        internalType: "string",
        name: "output",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "value",
        type: "address",
      },
    ],
    name: "toString",
    outputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "toString",
    outputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "toString",
    outputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "value",
        type: "bool",
      },
    ],
    name: "toString",
    outputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
    ],
    name: "toString",
    outputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "value",
        type: "bytes32",
      },
    ],
    name: "toString",
    outputs: [
      {
        internalType: "string",
        name: "stringifiedValue",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
    ],
    name: "toUppercase",
    outputs: [
      {
        internalType: "string",
        name: "output",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
    ],
    name: "trim",
    outputs: [
      {
        internalType: "string",
        name: "output",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "commandInput",
        type: "string[]",
      },
    ],
    name: "tryFfi",
    outputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "exitCode",
            type: "int32",
          },
          {
            internalType: "bytes",
            name: "stdout",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "stderr",
            type: "bytes",
          },
        ],
        internalType: "struct VmSafe.FfiResult",
        name: "result",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unixTime",
    outputs: [
      {
        internalType: "uint256",
        name: "milliseconds",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "writeFile",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "writeFileBinary",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
    ],
    name: "writeJson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "writeJson",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
    ],
    name: "writeLine",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
      {
        internalType: "string",
        name: "valueKey",
        type: "string",
      },
    ],
    name: "writeToml",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "json",
        type: "string",
      },
      {
        internalType: "string",
        name: "path",
        type: "string",
      },
    ],
    name: "writeToml",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class VmSafe__factory {
  static readonly abi = _abi;
  static createInterface(): VmSafeInterface {
    return new utils.Interface(_abi) as VmSafeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): VmSafe {
    return new Contract(address, _abi, signerOrProvider) as VmSafe;
  }
}
