/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICoreRegistry,
  ICoreRegistryInterface,
} from "../../ICoreRegistry.sol/ICoreRegistry";

const _abi = [
  {
    type: "function",
    name: "chainActivation",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "registry",
        type: "bytes",
        internalType: "bytes",
      },
      {
        name: "activation",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getActiveChains",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getChainMetadata",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "key",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getContractConfiguration",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "contractType",
        type: "string",
        internalType: "string",
      },
      {
        name: "key",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getContractInfo",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "contractType",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "active",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "address_",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getZRC20AddressByForeignAsset",
    inputs: [
      {
        name: "originChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "originAddress",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getZRC20TokenInfo",
    inputs: [
      {
        name: "address_",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "active",
        type: "bool",
        internalType: "bool",
      },
      {
        name: "symbol",
        type: "string",
        internalType: "string",
      },
      {
        name: "originChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "originAddress",
        type: "string",
        internalType: "string",
      },
      {
        name: "coinType",
        type: "string",
        internalType: "string",
      },
      {
        name: "decimals",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "registerContract",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "address_",
        type: "address",
        internalType: "address",
      },
      {
        name: "contractType",
        type: "string",
        internalType: "string",
      },
      {
        name: "addressString",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "registerZRC20Token",
    inputs: [
      {
        name: "address_",
        type: "address",
        internalType: "address",
      },
      {
        name: "symbol",
        type: "string",
        internalType: "string",
      },
      {
        name: "originChainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "originAddress",
        type: "string",
        internalType: "string",
      },
      {
        name: "coinType",
        type: "string",
        internalType: "string",
      },
      {
        name: "decimals",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setContractActive",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "contractType",
        type: "string",
        internalType: "string",
      },
      {
        name: "active",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateChainMetadata",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "key",
        type: "string",
        internalType: "string",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateContractConfiguration",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "contractType",
        type: "string",
        internalType: "string",
      },
      {
        name: "key",
        type: "string",
        internalType: "string",
      },
      {
        name: "value",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateZRC20Token",
    inputs: [
      {
        name: "address_",
        type: "address",
        internalType: "address",
      },
      {
        name: "active",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ChainStatusChanged",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContractRegistered",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "contractType",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "addressString",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContractStatusChanged",
    inputs: [
      {
        name: "addressString",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewChainMetadata",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "value",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "NewContractConfiguration",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "contractType",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "key",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "value",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ZRC20TokenRegistered",
    inputs: [
      {
        name: "originAddress",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "address_",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "decimals",
        type: "uint8",
        indexed: false,
        internalType: "uint8",
      },
      {
        name: "originChainId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "symbol",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ZRC20TokenUpdated",
    inputs: [
      {
        name: "address_",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "active",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ChainAlreadyActive",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ChainNonActive",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ContractAlreadyRegistered",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "contractType",
        type: "string",
        internalType: "string",
      },
      {
        name: "addressString",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "ContractNotFound",
    inputs: [
      {
        name: "chainId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "contractType",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidContractType",
    inputs: [
      {
        name: "message",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "ZRC20AlreadyRegistered",
    inputs: [
      {
        name: "address_",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ZRC20SymbolAlreadyInUse",
    inputs: [
      {
        name: "symbol",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "ZeroAddress",
    inputs: [],
  },
] as const;

export class ICoreRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): ICoreRegistryInterface {
    return new Interface(_abi) as ICoreRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICoreRegistry {
    return new Contract(address, _abi, runner) as unknown as ICoreRegistry;
  }
}
