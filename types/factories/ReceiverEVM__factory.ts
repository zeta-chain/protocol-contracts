/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ReceiverEVM, ReceiverEVMInterface } from "../ReceiverEVM";

const _abi = [
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "onCall",
    inputs: [
      {
        name: "messageContext",
        type: "tuple",
        internalType: "struct MessageContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
        ],
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "onRevert",
    inputs: [
      {
        name: "revertContext",
        type: "tuple",
        internalType: "struct RevertContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveERC20",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "destination",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveERC20Partial",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
      {
        name: "destination",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveNoParams",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receiveNonPayable",
    inputs: [
      {
        name: "strs",
        type: "string[]",
        internalType: "string[]",
      },
      {
        name: "nums",
        type: "uint256[]",
        internalType: "uint256[]",
      },
      {
        name: "flag",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "receivePayable",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
      {
        name: "num",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "flag",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "event",
    name: "ReceivedERC20",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "token",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "destination",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedNoParams",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedNonPayable",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "strs",
        type: "string[]",
        indexed: false,
        internalType: "string[]",
      },
      {
        name: "nums",
        type: "uint256[]",
        indexed: false,
        internalType: "uint256[]",
      },
      {
        name: "flag",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedOnCall",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "message",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedPayable",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "str",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "num",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "flag",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ReceivedRevert",
    inputs: [
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "revertContext",
        type: "tuple",
        indexed: false,
        internalType: "struct RevertContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AddressInsufficientBalance",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "FailedInnerCall",
    inputs: [],
  },
  {
    type: "error",
    name: "ReentrancyGuardReentrantCall",
    inputs: [],
  },
  {
    type: "error",
    name: "SafeERC20FailedOperation",
    inputs: [
      {
        name: "token",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ZeroAmount",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f80fd5b5060015f55610e8f806100205f395ff3fe60806040526004361061006d575f3560e01c8063c51316911161004a578063c5131691146100d2578063c9028a36146100f1578063e04d4f9714610110578063f05b6abf1461012357005b8063357fc5a214610076578063676cc054146100955780636ed70169146100be57005b3661007457005b005b348015610081575f80fd5b506100746100903660046106f4565b610142565b6100a86100a336600461072d565b6101d7565b6040516100b591906107fe565b60405180910390f35b3480156100c9575f80fd5b50610074610237565b3480156100dd575f80fd5b506100746100ec3660046106f4565b61026c565b3480156100fc575f80fd5b5061007461010b366004610810565b610344565b61007461011e366004610965565b610380565b34801561012e575f80fd5b5061007461013d366004610a49565b6103c4565b61014a6103f9565b61016c73ffffffffffffffffffffffffffffffffffffffff831633838661043a565b604080513381526020810185905273ffffffffffffffffffffffffffffffffffffffff848116828401528316606082015290517f2b58128f24a9f59127cc5b5430d70542b22220f2d9adaa86e442b816ab98af609181900360800190a16101d260015f55565b505050565b60607fd80b62959d9a7e797f352e4015e65d345f402ea21972256fb0ba94f00a3525016102076020860186610b2b565b848460405161021893929190610b8b565b60405180910390a15060408051602081019091525f81525b9392505050565b6040513381527fbcaadb46b82a48af60b608f58959ae6b8310d1b0a0d094c2e9ec3208ed39f2a09060200160405180910390a1565b6102746103f9565b5f610280600285610bc3565b9050805f036102bb576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102dd73ffffffffffffffffffffffffffffffffffffffff841633848461043a565b604080513381526020810183905273ffffffffffffffffffffffffffffffffffffffff858116828401528416606082015290517f2b58128f24a9f59127cc5b5430d70542b22220f2d9adaa86e442b816ab98af609181900360800190a1506101d260015f55565b7f689a5a5cb55e795ffe4cd8b419cd3bb0a3373974c54d25f64e734d7388b93e9b3382604051610375929190610bfb565b60405180910390a150565b7f1f1ff1f5fb41346850b2f5c04e6c767e2f1c8a525c5c0c5cdb60cdf3ca5f62fa33348585856040516103b7959493929190610ce9565b60405180910390a1505050565b7f74a53cd528a921fca7dbdee62f86819051d3cc98f214951f4238e8843f20b146338484846040516103b79493929190610d70565b60025f5403610434576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f55565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526104cf9085906104d5565b50505050565b5f6104f673ffffffffffffffffffffffffffffffffffffffff84168361056e565b905080515f1415801561051a5750808060200190518101906105189190610e28565b155b156101d2576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841660048201526024015b60405180910390fd5b606061023083835f845f808573ffffffffffffffffffffffffffffffffffffffff16848660405161059f9190610e43565b5f6040518083038185875af1925050503d805f81146105d9576040519150601f19603f3d011682016040523d82523d5f602084013e6105de565b606091505b50915091506105ee8683836105f8565b9695505050505050565b60608261060d5761060882610687565b610230565b8151158015610631575073ffffffffffffffffffffffffffffffffffffffff84163b155b15610680576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610565565b5080610230565b8051156106975780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b803573ffffffffffffffffffffffffffffffffffffffff811681146106ef575f80fd5b919050565b5f805f60608486031215610706575f80fd5b83359250610716602085016106cc565b9150610724604085016106cc565b90509250925092565b5f805f8385036040811215610740575f80fd5b602081121561074d575f80fd5b50839250602084013567ffffffffffffffff81111561076a575f80fd5b8401601f8101861361077a575f80fd5b803567ffffffffffffffff811115610790575f80fd5b8660208284010111156107a1575f80fd5b939660209190910195509293505050565b5f81518084528060208401602086015e5f6020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081525f61023060208301846107b2565b5f60208284031215610820575f80fd5b813567ffffffffffffffff811115610836575f80fd5b820160808185031215610230575f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156108bb576108bb610847565b604052919050565b5f82601f8301126108d2575f80fd5b813567ffffffffffffffff8111156108ec576108ec610847565b61091d60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610874565b818152846020838601011115610931575f80fd5b816020850160208301375f918101602001919091529392505050565b80151581146106c9575f80fd5b80356106ef8161094d565b5f805f60608486031215610977575f80fd5b833567ffffffffffffffff81111561098d575f80fd5b610999868287016108c3565b9350506020840135915060408401356109b18161094d565b809150509250925092565b5f67ffffffffffffffff8211156109d5576109d5610847565b5060051b60200190565b5f82601f8301126109ee575f80fd5b8135610a016109fc826109bc565b610874565b8082825260208201915060208360051b860101925085831115610a22575f80fd5b602085015b83811015610a3f578035835260209283019201610a27565b5095945050505050565b5f805f60608486031215610a5b575f80fd5b833567ffffffffffffffff811115610a71575f80fd5b8401601f81018613610a81575f80fd5b8035610a8f6109fc826109bc565b8082825260208201915060208360051b850101925088831115610ab0575f80fd5b602084015b83811015610af157803567ffffffffffffffff811115610ad3575f80fd5b610ae28b6020838901016108c3565b84525060209283019201610ab5565b509550505050602084013567ffffffffffffffff811115610b10575f80fd5b610b1c868287016109df565b9250506107246040850161095a565b5f60208284031215610b3b575f80fd5b610230826106cc565b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b73ffffffffffffffffffffffffffffffffffffffff84168152604060208201525f610bba604083018486610b44565b95945050505050565b5f82610bf6577f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b500490565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015273ffffffffffffffffffffffffffffffffffffffff610c39836106cc565b16604082015273ffffffffffffffffffffffffffffffffffffffff610c60602084016106cc565b1660608201525f80604084013590508060808401525060608301357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112610caa575f80fd5b830160208101903567ffffffffffffffff811115610cc6575f80fd5b803603821315610cd4575f80fd5b608060a08501526105ee60c085018284610b44565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015260a060408201525f610d1d60a08301866107b2565b6060830194909452509015156080909101529392505050565b5f8151808452602084019350602083015f5b82811015610d66578151865260209586019590910190600101610d48565b5093949350505050565b5f6080820173ffffffffffffffffffffffffffffffffffffffff871683526080602084015280865180835260a08501915060a08160051b8601019250602088015f5b82811015610e01577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60878603018452610dec8583516107b2565b94506020938401939190910190600101610db2565b505050508281036040840152610e178186610d36565b915050610bba606083018415159052565b5f60208284031215610e38575f80fd5b81516102308161094d565b5f82518060208501845e5f92019182525091905056fea2646970667358221220cc2379c7c84790c7638f9a0f9c0226f049a072f8400d8fcfc324502b3dd2135864736f6c634300081a0033";

type ReceiverEVMConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReceiverEVMConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReceiverEVM__factory extends ContractFactory {
  constructor(...args: ReceiverEVMConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ReceiverEVM & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ReceiverEVM__factory {
    return super.connect(runner) as ReceiverEVM__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReceiverEVMInterface {
    return new Interface(_abi) as ReceiverEVMInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ReceiverEVM {
    return new Contract(address, _abi, runner) as unknown as ReceiverEVM;
  }
}
