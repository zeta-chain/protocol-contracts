/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  TestUniversalContract,
  TestUniversalContractInterface,
} from "../TestUniversalContract";

const _abi = [
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "gateway",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IGatewayZEVM",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onAbort",
    inputs: [
      {
        name: "abortContext",
        type: "tuple",
        internalType: "struct AbortContext",
        components: [
          {
            name: "sender",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outgoing",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "chainID",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onCall",
    inputs: [
      {
        name: "context",
        type: "tuple",
        internalType: "struct MessageContext",
        components: [
          {
            name: "sender",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "senderEVM",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainID",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onCall",
    inputs: [
      {
        name: "context",
        type: "tuple",
        internalType: "struct MessageContext",
        components: [
          {
            name: "sender",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "senderEVM",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainID",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "onRevert",
    inputs: [
      {
        name: "revertContext",
        type: "tuple",
        internalType: "struct RevertContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "registry",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract ICoreRegistry",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "ContextData",
    inputs: [
      {
        name: "origin",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "chainID",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "msgSender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "message",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContextDataAbort",
    inputs: [
      {
        name: "abortContext",
        type: "tuple",
        indexed: false,
        internalType: "struct AbortContext",
        components: [
          {
            name: "sender",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outgoing",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "chainID",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContextDataRevert",
    inputs: [
      {
        name: "revertContext",
        type: "tuple",
        indexed: false,
        internalType: "struct RevertContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a060405234801561000f575f80fd5b50737cce3eb018bf23e1fe2a32692f2c77592d1103946001600160a01b031663cc5ad8b66040518163ffffffff1660e01b81526004016020604051808303815f875af1158015610061573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100859190610096565b6001600160a01b03166080526100c3565b5f602082840312156100a6575f80fd5b81516001600160a01b03811681146100bc575f80fd5b9392505050565b60805161090e6100da5f395f607c015261090e5ff3fe608060405260043610610062575f3560e01c80637b1039991161003f5780637b10399914610105578063c9028a361461012c578063ebf9b2aa1461013f57005b8063116191b61461006b5780632d4cfb7e146100c75780635bcfd616146100e657005b3661006957005b005b348015610076575f80fd5b5061009e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100d2575f80fd5b506100696100e13660046102af565b610152565b3480156100f1575f80fd5b50610069610100366004610370565b61018c565b348015610110575f80fd5b5061009e737cce3eb018bf23e1fe2a32692f2c77592d11039481565b61006961013a3660046103f4565b610207565b61006961014d36600461042b565b610236565b7f7d77d89ce7d68a5bf49d11b7fd7a992caa1c107a4c09b324ada48ee9c21b3db781604051610181919061053b565b60405180910390a150565b606081156101a3576101a08284018461063b565b90505b7fcdc8ee677dc5ebe680fb18cebda5e26ba5ea1f0ba504a47e2a9a2ecb476dc98e6101ce878061072b565b6101de60408a0160208b0161078c565b896040013533866040516101f7969594939291906107a5565b60405180910390a1505050505050565b7fd75bb509c8f32a725aac99ac5c4541060dbfb889a3aca8314d6f00395618c4c481604051610181919061084f565b6060811561024d5761024a8284018461063b565b90505b7fcdc8ee677dc5ebe680fb18cebda5e26ba5ea1f0ba504a47e2a9a2ecb476dc98e610278858061072b565b610288604088016020890161078c565b876040013533866040516102a1969594939291906107a5565b60405180910390a150505050565b5f602082840312156102bf575f80fd5b813567ffffffffffffffff8111156102d5575f80fd5b820160c081850312156102e6575f80fd5b9392505050565b5f606082840312156102fd575f80fd5b50919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610326575f80fd5b919050565b5f8083601f84011261033b575f80fd5b50813567ffffffffffffffff811115610352575f80fd5b602083019150836020828501011115610369575f80fd5b9250929050565b5f805f805f60808688031215610384575f80fd5b853567ffffffffffffffff81111561039a575f80fd5b6103a6888289016102ed565b9550506103b560208701610303565b935060408601359250606086013567ffffffffffffffff8111156103d7575f80fd5b6103e38882890161032b565b969995985093965092949392505050565b5f60208284031215610404575f80fd5b813567ffffffffffffffff81111561041a575f80fd5b8201608081850312156102e6575f80fd5b5f805f6040848603121561043d575f80fd5b833567ffffffffffffffff811115610453575f80fd5b61045f868287016102ed565b935050602084013567ffffffffffffffff81111561047b575f80fd5b6104878682870161032b565b9497909650939450505050565b5f8083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126104c7575f80fd5b830160208101925035905067ffffffffffffffff8111156104e6575f80fd5b803603821315610369575f80fd5b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b602081525f61054a8384610494565b60c0602085015261055f60e0850182846104f4565b91505073ffffffffffffffffffffffffffffffffffffffff61058360208601610303565b1660408401525f604085013590508060608501525060608401358015158082146105ab575f80fd5b80608086015250505f608085013590508060a0850152506105cf60a0850185610494565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160c08601526106048382846104f4565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f6020828403121561064b575f80fd5b813567ffffffffffffffff811115610661575f80fd5b8201601f81018413610671575f80fd5b803567ffffffffffffffff81111561068b5761068b61060e565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff821117156106f7576106f761060e565b60405281815282820160200186101561070e575f80fd5b816020840160208301375f91810160200191909152949350505050565b5f8083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261075e575f80fd5b83018035915067ffffffffffffffff821115610778575f80fd5b602001915036819003821315610369575f80fd5b5f6020828403121561079c575f80fd5b6102e682610303565b60a081525f6107b860a08301888a6104f4565b73ffffffffffffffffffffffffffffffffffffffff8716602084015285604084015273ffffffffffffffffffffffffffffffffffffffff85166060840152828103608084015283518082528060208601602084015e5f6020828401015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011683010192505050979650505050505050565b6020815273ffffffffffffffffffffffffffffffffffffffff61087183610303565b16602082015273ffffffffffffffffffffffffffffffffffffffff61089860208401610303565b1660408201525f8060408401359050806060840152506108bb6060840184610494565b6080808501526108cf60a0850182846104f4565b9594505050505056fea2646970667358221220a64e013103933ff9404529f144c5a2f5a866ae234acd5df9db90667ed205ff5664736f6c634300081a0033";

type TestUniversalContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniversalContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniversalContract__factory extends ContractFactory {
  constructor(...args: TestUniversalContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TestUniversalContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestUniversalContract__factory {
    return super.connect(runner) as TestUniversalContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniversalContractInterface {
    return new Interface(_abi) as TestUniversalContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestUniversalContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestUniversalContract;
  }
}
