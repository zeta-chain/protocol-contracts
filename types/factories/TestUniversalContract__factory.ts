/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  TestUniversalContract,
  TestUniversalContractInterface,
} from "../TestUniversalContract";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "gatewayAddress",
        type: "address",
        internalType: "address payable",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "gateway",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract GatewayZEVM",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onAbort",
    inputs: [
      {
        name: "abortContext",
        type: "tuple",
        internalType: "struct AbortContext",
        components: [
          {
            name: "sender",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outgoing",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "chainID",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onCall",
    inputs: [
      {
        name: "context",
        type: "tuple",
        internalType: "struct MessageContext",
        components: [
          {
            name: "sender",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "senderEVM",
            type: "address",
            internalType: "address",
          },
          {
            name: "chainID",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "onRevert",
    inputs: [
      {
        name: "revertContext",
        type: "tuple",
        internalType: "struct RevertContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ContextData",
    inputs: [
      {
        name: "origin",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
      {
        name: "sender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "chainID",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "msgSender",
        type: "address",
        indexed: false,
        internalType: "address",
      },
      {
        name: "message",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContextDataAbort",
    inputs: [
      {
        name: "abortContext",
        type: "tuple",
        indexed: false,
        internalType: "struct AbortContext",
        components: [
          {
            name: "sender",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "outgoing",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "chainID",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContextDataRevert",
    inputs: [
      {
        name: "revertContext",
        type: "tuple",
        indexed: false,
        internalType: "struct RevertContext",
        components: [
          {
            name: "sender",
            type: "address",
            internalType: "address",
          },
          {
            name: "asset",
            type: "address",
            internalType: "address",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "revertMessage",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x60a0604052348015600f57600080fd5b50604051610883380380610883833981016040819052602c91603c565b6001600160a01b0316608052606a565b600060208284031215604d57600080fd5b81516001600160a01b0381168114606357600080fd5b9392505050565b6080516107ff6100846000396000605b01526107ff6000f3fe6080604052600436106100405760003560e01c8063116191b6146100495780632d4cfb7e146100a65780635bcfd616146100c6578063c9028a36146100e657005b3661004757005b005b34801561005557600080fd5b5061007d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b3480156100b257600080fd5b506100476100c13660046101ea565b610106565b3480156100d257600080fd5b506100476100e1366004610255565b610140565b3480156100f257600080fd5b50610047610101366004610312565b6101bb565b7f7d77d89ce7d68a5bf49d11b7fd7a992caa1c107a4c09b324ada48ee9c21b3db7816040516101359190610401565b60405180910390a150565b606081156101575761015482840184610507565b90505b7fcdc8ee677dc5ebe680fb18cebda5e26ba5ea1f0ba504a47e2a9a2ecb476dc98e61018287806105fd565b61019260408a0160208b01610662565b896040013533866040516101ab9695949392919061067d565b60405180910390a1505050505050565b7fd75bb509c8f32a725aac99ac5c4541060dbfb889a3aca8314d6f00395618c4c481604051610135919061073f565b6000602082840312156101fc57600080fd5b813567ffffffffffffffff81111561021357600080fd5b820160c0818503121561022557600080fd5b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461025057600080fd5b919050565b60008060008060006080868803121561026d57600080fd5b853567ffffffffffffffff81111561028457600080fd5b86016060818903121561029657600080fd5b94506102a46020870161022c565b935060408601359250606086013567ffffffffffffffff8111156102c757600080fd5b8601601f810188136102d857600080fd5b803567ffffffffffffffff8111156102ef57600080fd5b88602082840101111561030157600080fd5b959894975092955050506020019190565b60006020828403121561032457600080fd5b813567ffffffffffffffff81111561033b57600080fd5b82016080818503121561022557600080fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261038257600080fd5b830160208101925035905067ffffffffffffffff8111156103a257600080fd5b8036038213156103b157600080fd5b9250929050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b602081526000610411838461034d565b60c0602085015261042660e0850182846103b8565b91505073ffffffffffffffffffffffffffffffffffffffff61044a6020860161022c565b16604084015260006040850135905080606085015250606084013580151580821461047457600080fd5b80608086015250506000608085013590508060a08501525061049960a085018561034d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160c08601526104ce8382846103b8565b9695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561051957600080fd5b813567ffffffffffffffff81111561053057600080fd5b8201601f8101841361054157600080fd5b803567ffffffffffffffff81111561055b5761055b6104d8565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff821117156105c7576105c76104d8565b6040528181528282016020018610156105df57600080fd5b81602084016020830137600091810160200191909152949350505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261063257600080fd5b83018035915067ffffffffffffffff82111561064d57600080fd5b6020019150368190038213156103b157600080fd5b60006020828403121561067457600080fd5b6102258261022c565b60a08152600061069160a08301888a6103b8565b73ffffffffffffffffffffffffffffffffffffffff8716602084015285604084015273ffffffffffffffffffffffffffffffffffffffff851660608401528281036080840152835180825260005b818110156106fb576020818701810151848301820152016106df565b5060006020828401015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011683010192505050979650505050505050565b6020815273ffffffffffffffffffffffffffffffffffffffff6107618361022c565b16602082015273ffffffffffffffffffffffffffffffffffffffff6107886020840161022c565b16604082015260008060408401359050806060840152506107ac606084018461034d565b6080808501526107c060a0850182846103b8565b9594505050505056fea2646970667358221220746ed8c7f2f1157450e6feec887f80bccae029406dc9c7d1f45d5f64cb3063e264736f6c634300081a0033";

type TestUniversalContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestUniversalContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestUniversalContract__factory extends ContractFactory {
  constructor(...args: TestUniversalContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    gatewayAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(gatewayAddress, overrides || {});
  }
  override deploy(
    gatewayAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(gatewayAddress, overrides || {}) as Promise<
      TestUniversalContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): TestUniversalContract__factory {
    return super.connect(runner) as TestUniversalContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestUniversalContractInterface {
    return new Interface(_abi) as TestUniversalContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TestUniversalContract {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as TestUniversalContract;
  }
}
