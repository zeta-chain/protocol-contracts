/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SystemContractMock,
  SystemContractMockInterface,
} from "../../SystemContractMock.sol/SystemContractMock";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "wzeta_",
        type: "address",
        internalType: "address",
      },
      {
        name: "uniswapv2Factory_",
        type: "address",
        internalType: "address",
      },
      {
        name: "uniswapv2Router02_",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "gasCoinZRC20ByChainId",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "gasPriceByChainId",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "gasZetaPoolByChainId",
    inputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "onCrossChainCall",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
      {
        name: "zrc20",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "message",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setGasCoinZRC20",
    inputs: [
      {
        name: "chainID",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "zrc20",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setGasPrice",
    inputs: [
      {
        name: "chainID",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "price",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setWZETAContractAddress",
    inputs: [
      {
        name: "addr",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "uniswapv2FactoryAddress",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "uniswapv2PairFor",
    inputs: [
      {
        name: "factory",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenA",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenB",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "pair",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "uniswapv2Router02Address",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "wZetaContractAddress",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "SetGasCoin",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetGasPrice",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetGasZetaPool",
    inputs: [
      {
        name: "",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SetWZeta",
    inputs: [
      {
        name: "",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "SystemContractDeployed",
    inputs: [],
    anonymous: false,
  },
  {
    type: "error",
    name: "CallerIsNotFungibleModule",
    inputs: [],
  },
  {
    type: "error",
    name: "CantBeIdenticalAddresses",
    inputs: [],
  },
  {
    type: "error",
    name: "CantBeZeroAddress",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidTarget",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50604051610ad7380380610ad783398101604081905261002e916100b6565b600380546001600160a01b038086166001600160a01b0319928316179092556004805485841690831617905560058054928416929091169190911790556040517f80699e81136d69cb8367ad52a994e25c722a86da654b561d0c14b61a777e7ac5905f90a15050506100f6565b80516001600160a01b03811681146100b1575f80fd5b919050565b5f805f606084860312156100c8575f80fd5b6100d18461009b565b92506100df6020850161009b565b91506100ed6040850161009b565b90509250925092565b6109d4806101035f395ff3fe608060405234801561000f575f80fd5b50600436106100c4575f3560e01c806397770dff1161007d578063d7fd7afb11610058578063d7fd7afb146101ea578063d936a01214610217578063ee2815ba14610237575f80fd5b806397770dff146101b1578063a7cb0507146101c4578063c63585cc146101d7575f80fd5b8063513a9c05116100ad578063513a9c051461013c578063569541b914610171578063842da36d14610191575f80fd5b80630be15547146100c85780633c669d5514610127575b5f80fd5b6100fd6100d6366004610707565b60016020525f908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61013a610135366004610746565b61024a565b005b6100fd61014a366004610707565b60026020525f908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b6003546100fd9073ffffffffffffffffffffffffffffffffffffffff1681565b6005546100fd9073ffffffffffffffffffffffffffffffffffffffff1681565b61013a6101bf3660046107db565b61038e565b61013a6101d23660046107fb565b610407565b6100fd6101e536600461081b565b610454565b6102096101f8366004610707565b5f6020819052908152604090205481565b60405190815260200161011e565b6004546100fd9073ffffffffffffffffffffffffffffffffffffffff1681565b61013a61024536600461085b565b610587565b604080516080810182525f606082019081528152336020820152468183015290517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301526024820186905286169063a9059cbb906044016020604051808303815f875af11580156102da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102fe9190610885565b506040517fde43156e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87169063de43156e9061035990849089908990899089906004016108eb565b5f604051808303815f87803b158015610370575f80fd5b505af1158015610382573d5f803e3d5ffd5b50505050505050505050565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fdba79d534382d1a8ae108e4c8ecb27c6ae42ab8b91d44eedf88bd329f3868d5e9060200160405180910390a150565b5f828152602081815260409182902083905581518481529081018390527f49f492222906ac486c3c1401fa545626df1f0c0e5a77a05597ea2ed66af9850d91015b60405180910390a15050565b5f805f610461858561060a565b6040517fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606084811b8216602084015283901b16603482015291935091508690604801604051602081830303815290604052805190602001206040516020016105479291907fff00000000000000000000000000000000000000000000000000000000000000815260609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016600183015260158201527f96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f603582015260550190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209695505050505050565b5f8281526001602090815260409182902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85169081179091558251858152918201527fd1b36d30f6248e97c473b4d1348ca164a4ef6759022f54a58ec200326c39c45d9101610448565b5f808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610671576040517fcb1e7cfe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16106106ab5782846106ae565b83835b909250905073ffffffffffffffffffffffffffffffffffffffff8216610700576040517f78b507da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9250929050565b5f60208284031215610717575f80fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610741575f80fd5b919050565b5f805f805f6080868803121561075a575f80fd5b6107638661071e565b94506107716020870161071e565b935060408601359250606086013567ffffffffffffffff811115610793575f80fd5b8601601f810188136107a3575f80fd5b803567ffffffffffffffff8111156107b9575f80fd5b8860208284010111156107ca575f80fd5b959894975092955050506020019190565b5f602082840312156107eb575f80fd5b6107f48261071e565b9392505050565b5f806040838503121561080c575f80fd5b50508035926020909101359150565b5f805f6060848603121561082d575f80fd5b6108368461071e565b92506108446020850161071e565b91506108526040850161071e565b90509250925092565b5f806040838503121561086c575f80fd5b8235915061087c6020840161071e565b90509250929050565b5f60208284031215610895575f80fd5b815180151581146107f4575f80fd5b81835281816020850137505f602082840101525f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b608081525f86516060608084015280518060e0850152806020830161010086015e5f848201610100015260208981015173ffffffffffffffffffffffffffffffffffffffff90811660a087015260408b015160c0870152891690850152601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01683019050856040840152610100838203016060840152610992610100820185876108a4565b9897505050505050505056fea2646970667358221220db4eda514a9423ff3f450e96522af40832ad52ecc89b5b9e41ac1436409d92f464736f6c634300081a0033";

type SystemContractMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SystemContractMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SystemContractMock__factory extends ContractFactory {
  constructor(...args: SystemContractMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    wzeta_: AddressLike,
    uniswapv2Factory_: AddressLike,
    uniswapv2Router02_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      wzeta_,
      uniswapv2Factory_,
      uniswapv2Router02_,
      overrides || {}
    );
  }
  override deploy(
    wzeta_: AddressLike,
    uniswapv2Factory_: AddressLike,
    uniswapv2Router02_: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      wzeta_,
      uniswapv2Factory_,
      uniswapv2Router02_,
      overrides || {}
    ) as Promise<
      SystemContractMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SystemContractMock__factory {
    return super.connect(runner) as SystemContractMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SystemContractMockInterface {
    return new Interface(_abi) as SystemContractMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SystemContractMock {
    return new Contract(address, _abi, runner) as unknown as SystemContractMock;
  }
}
