/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ZetaEth, ZetaEthInterface } from "../ZetaEth";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "creator",
        type: "address",
        internalType: "address",
      },
      {
        name: "initialSupply",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ERC20InsufficientAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "allowance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSpender",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b50604051610deb380380610deb83398101604081905261002e91610225565b604051806040016040528060048152602001635a65746160e01b815250604051806040016040528060048152602001635a45544160e01b815250816003908161007791906102f4565b50600461008482826102f4565b5050506100b6826100996100bd60201b60201c565b6100a79060ff16600a6104a7565b6100b190846104b9565b6100c2565b50506104e3565b601290565b6001600160a01b0382166100f05760405163ec442f0560e01b81525f60048201526024015b60405180910390fd5b6100fb5f83836100ff565b5050565b6001600160a01b038316610129578060025f82825461011e91906104d0565b909155506101999050565b6001600160a01b0383165f908152602081905260409020548181101561017b5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016100e7565b6001600160a01b0384165f9081526020819052604090209082900390555b6001600160a01b0382166101b5576002805482900390556101d3565b6001600160a01b0382165f9081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161021891815260200190565b60405180910390a3505050565b5f8060408385031215610236575f80fd5b82516001600160a01b038116811461024c575f80fd5b6020939093015192949293505050565b634e487b7160e01b5f52604160045260245ffd5b600181811c9082168061028457607f821691505b6020821081036102a257634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156102ef57805f5260205f20601f840160051c810160208510156102cd5750805b601f840160051c820191505b818110156102ec575f81556001016102d9565b50505b505050565b81516001600160401b0381111561030d5761030d61025c565b6103218161031b8454610270565b846102a8565b6020601f821160018114610353575f831561033c5750848201515b5f19600385901b1c1916600184901b1784556102ec565b5f84815260208120601f198516915b828110156103825787850151825560209485019460019092019101610362565b508482101561039f57868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b6001815b60018411156103fd578085048111156103e1576103e16103ae565b60018416156103ef57908102905b60019390931c9280026103c6565b935093915050565b5f82610413575060016104a1565b8161041f57505f6104a1565b8160018114610435576002811461043f5761045b565b60019150506104a1565b60ff841115610450576104506103ae565b50506001821b6104a1565b5060208310610133831016604e8410600b841016171561047e575081810a6104a1565b61048a5f1984846103c2565b805f190482111561049d5761049d6103ae565b0290505b92915050565b5f6104b28383610405565b9392505050565b80820281158282048414176104a1576104a16103ae565b808201808211156104a1576104a16103ae565b6108fb806104f05f395ff3fe608060405234801561000f575f80fd5b506004361061009f575f3560e01c8063313ce5671161007257806395d89b411161005857806395d89b411461014d578063a9059cbb14610155578063dd62ed3e14610168575f80fd5b8063313ce5671461010957806370a0823114610118575f80fd5b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100e457806323b872dd146100f6575b5f80fd5b6100ab6101ad565b6040516100b8919061070e565b60405180910390f35b6100d46100cf366004610789565b61023d565b60405190151581526020016100b8565b6002545b6040519081526020016100b8565b6100d46101043660046107b1565b610256565b604051601281526020016100b8565b6100e86101263660046107eb565b73ffffffffffffffffffffffffffffffffffffffff165f9081526020819052604090205490565b6100ab610279565b6100d4610163366004610789565b610288565b6100e861017636600461080b565b73ffffffffffffffffffffffffffffffffffffffff9182165f90815260016020908152604080832093909416825291909152205490565b6060600380546101bc9061083c565b80601f01602080910402602001604051908101604052809291908181526020018280546101e89061083c565b80156102335780601f1061020a57610100808354040283529160200191610233565b820191905f5260205f20905b81548152906001019060200180831161021657829003601f168201915b5050505050905090565b5f3361024a818585610295565b60019150505b92915050565b5f336102638582856102a7565b61026e858585610379565b506001949350505050565b6060600480546101bc9061083c565b5f3361024a818585610379565b6102a28383836001610422565b505050565b73ffffffffffffffffffffffffffffffffffffffff8381165f908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103735781811015610365576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052604481018390526064015b60405180910390fd5b61037384848484035f610422565b50505050565b73ffffffffffffffffffffffffffffffffffffffff83166103c8576040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081525f600482015260240161035c565b73ffffffffffffffffffffffffffffffffffffffff8216610417576040517fec442f050000000000000000000000000000000000000000000000000000000081525f600482015260240161035c565b6102a2838383610567565b73ffffffffffffffffffffffffffffffffffffffff8416610471576040517fe602df050000000000000000000000000000000000000000000000000000000081525f600482015260240161035c565b73ffffffffffffffffffffffffffffffffffffffff83166104c0576040517f94280d620000000000000000000000000000000000000000000000000000000081525f600482015260240161035c565b73ffffffffffffffffffffffffffffffffffffffff8085165f9081526001602090815260408083209387168352929052208290558015610373578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161055991815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff831661059e578060025f828254610593919061088d565b9091555061064e9050565b73ffffffffffffffffffffffffffffffffffffffff83165f9081526020819052604090205481811015610623576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602481018290526044810183905260640161035c565b73ffffffffffffffffffffffffffffffffffffffff84165f9081526020819052604090209082900390555b73ffffffffffffffffffffffffffffffffffffffff8216610677576002805482900390556106a2565b73ffffffffffffffffffffffffffffffffffffffff82165f9081526020819052604090208054820190555b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161070191815260200190565b60405180910390a3505050565b602081525f82518060208401528060208501604085015e5f6040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff81168114610784575f80fd5b919050565b5f806040838503121561079a575f80fd5b6107a383610761565b946020939093013593505050565b5f805f606084860312156107c3575f80fd5b6107cc84610761565b92506107da60208501610761565b929592945050506040919091013590565b5f602082840312156107fb575f80fd5b61080482610761565b9392505050565b5f806040838503121561081c575f80fd5b61082583610761565b915061083360208401610761565b90509250929050565b600181811c9082168061085057607f821691505b602082108103610887577f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b50919050565b80820180821115610250577f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffdfea26469706673582212208402016ce5815c2c6d42e0dee654fe5204e4fb795e273f4e22cfb4216346586564736f6c634300081a0033";

type ZetaEthConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZetaEthConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZetaEth__factory extends ContractFactory {
  constructor(...args: ZetaEthConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    creator: AddressLike,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(creator, initialSupply, overrides || {});
  }
  override deploy(
    creator: AddressLike,
    initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(creator, initialSupply, overrides || {}) as Promise<
      ZetaEth & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ZetaEth__factory {
    return super.connect(runner) as ZetaEth__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZetaEthInterface {
    return new Interface(_abi) as ZetaEthInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ZetaEth {
    return new Contract(address, _abi, runner) as unknown as ZetaEth;
  }
}
