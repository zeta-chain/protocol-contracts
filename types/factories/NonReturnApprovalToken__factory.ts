/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  NonReturnApprovalToken,
  NonReturnApprovalTokenInterface,
} from "../NonReturnApprovalToken";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "_name",
        type: "string",
        internalType: "string",
      },
      {
        name: "_symbol",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
] as const;

const _bytecode =
  "0x60806040526002805460ff1916601217905534801561001d57600080fd5b50604051610bf8380380610bf883398101604081905261003c91610116565b60006100488382610208565b5060016100558282610208565b5050506102c6565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261008457600080fd5b81516001600160401b0381111561009d5761009d61005d565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100cb576100cb61005d565b6040528181528382016020018510156100e357600080fd5b60005b82811015610102576020818601810151838301820152016100e6565b506000918101602001919091529392505050565b6000806040838503121561012957600080fd5b82516001600160401b0381111561013f57600080fd5b61014b85828601610073565b602085015190935090506001600160401b0381111561016957600080fd5b61017585828601610073565b9150509250929050565b600181811c9082168061019357607f821691505b6020821081036101b357634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561020357806000526020600020601f840160051c810160208510156101e05750805b601f840160051c820191505b8181101561020057600081556001016101ec565b50505b505050565b81516001600160401b038111156102215761022161005d565b6102358161022f845461017f565b846101b9565b6020601f82116001811461026957600083156102515750848201515b600019600385901b1c1916600184901b178455610200565b600084815260208120601f198516915b828110156102995787850151825560209485019460019092019101610279565b50848210156102b75786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b610923806102d56000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806340c10f191161007657806395d89b411161005b57806395d89b4114610182578063a9059cbb1461018a578063dd62ed3e1461019d57600080fd5b806340c10f191461014f57806370a082311461016257600080fd5b806318160ddd116100a757806318160ddd146100f657806323b872dd1461010d578063313ce5671461013057600080fd5b806306fdde03146100c3578063095ea7b3146100e1575b600080fd5b6100cb6101c8565b6040516100d891906106f4565b60405180910390f35b6100f46100ef366004610789565b610256565b005b6100ff60035481565b6040519081526020016100d8565b61012061011b3660046107b3565b6102c3565b60405190151581526020016100d8565b60025461013d9060ff1681565b60405160ff90911681526020016100d8565b6100f461015d366004610789565b61051d565b6100ff6101703660046107f0565b60046020526000908152604090205481565b6100cb6105b9565b610120610198366004610789565b6105c6565b6100ff6101ab366004610812565b600560209081526000928352604080842090915290825290205481565b600080546101d590610845565b80601f016020809104026020016040519081016040528092919081815260200182805461020190610845565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b505050505081565b33600081815260056020908152604080832073ffffffffffffffffffffffffffffffffffffffff871680855290835292819020859055518481529192917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040812054821115610357576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e636500000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff841660009081526005602090815260408083203384529091529020548211156103f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f496e73756666696369656e7420616c6c6f77616e636500000000000000000000604482015260640161034e565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260046020526040812080548492906104269084906108c7565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040812080548492906104609084906108da565b909155505073ffffffffffffffffffffffffffffffffffffffff84166000908152600560209081526040808320338452909152812080548492906104a59084906108c7565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161050b91815260200190565b60405180910390a35060019392505050565b806003600082825461052f91906108da565b909155505073ffffffffffffffffffffffffffffffffffffffff8216600090815260046020526040812080548392906105699084906108da565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016102b7565b600180546101d590610845565b3360009081526004602052604081205482111561063f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f496e73756666696369656e742062616c616e6365000000000000000000000000604482015260640161034e565b336000908152600460205260408120805484929061065e9084906108c7565b909155505073ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040812080548492906106989084906108da565b909155505060405182815273ffffffffffffffffffffffffffffffffffffffff84169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35060015b92915050565b602081526000825180602084015260005b818110156107225760208186018101516040868401015201610705565b5060006040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461078457600080fd5b919050565b6000806040838503121561079c57600080fd5b6107a583610760565b946020939093013593505050565b6000806000606084860312156107c857600080fd5b6107d184610760565b92506107df60208501610760565b929592945050506040919091013590565b60006020828403121561080257600080fd5b61080b82610760565b9392505050565b6000806040838503121561082557600080fd5b61082e83610760565b915061083c60208401610760565b90509250929050565b600181811c9082168061085957607f821691505b602082108103610892577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818103818111156106ee576106ee610898565b808201808211156106ee576106ee61089856fea264697066735822122041013599089452b2c9cdcab1a4eb2194e2bcab74511cb3cee684a048cea2529f64736f6c634300081a0033";

type NonReturnApprovalTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonReturnApprovalTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NonReturnApprovalToken__factory extends ContractFactory {
  constructor(...args: NonReturnApprovalTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override deploy(
    _name: string,
    _symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<
      NonReturnApprovalToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): NonReturnApprovalToken__factory {
    return super.connect(runner) as NonReturnApprovalToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonReturnApprovalTokenInterface {
    return new Interface(_abi) as NonReturnApprovalTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NonReturnApprovalToken {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as NonReturnApprovalToken;
  }
}
