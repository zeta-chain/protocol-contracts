/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  RevertOnZeroApprovalToken,
  RevertOnZeroApprovalTokenInterface,
} from "../RevertOnZeroApprovalToken";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "symbol",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "allowance",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "decimals",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint8",
        internalType: "uint8",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "spender",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "value",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ERC20InsufficientAllowance",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
      {
        name: "allowance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InsufficientBalance",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "balance",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "needed",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC20InvalidSpender",
    inputs: [
      {
        name: "spender",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cb8380380610cb883398101604081905261002f91610111565b81818181600361003f8382610203565b50600461004c8282610203565b505050505050506102c1565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261007f57600080fd5b81516001600160401b0381111561009857610098610058565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100c6576100c6610058565b6040528181528382016020018510156100de57600080fd5b60005b828110156100fd576020818601810151838301820152016100e1565b506000918101602001919091529392505050565b6000806040838503121561012457600080fd5b82516001600160401b0381111561013a57600080fd5b6101468582860161006e565b602085015190935090506001600160401b0381111561016457600080fd5b6101708582860161006e565b9150509250929050565b600181811c9082168061018e57607f821691505b6020821081036101ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101fe57806000526020600020601f840160051c810160208510156101db5750805b601f840160051c820191505b818110156101fb57600081556001016101e7565b50505b505050565b81516001600160401b0381111561021c5761021c610058565b6102308161022a845461017a565b846101b4565b6020601f821160018114610264576000831561024c5750848201515b600019600385901b1c1916600184901b1784556101fb565b600084815260208120601f198516915b828110156102945787850151825560209485019460019092019101610274565b50848210156102b25786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6109e8806102d06000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c806340c10f191161007657806395d89b411161005b57806395d89b4114610183578063a9059cbb1461018b578063dd62ed3e1461019e57600080fd5b806340c10f191461013857806370a082311461014d57600080fd5b806318160ddd116100a757806318160ddd1461010457806323b872dd14610116578063313ce5671461012957600080fd5b806306fdde03146100c3578063095ea7b3146100e1575b600080fd5b6100cb6101e4565b6040516100d891906107db565b60405180910390f35b6100f46100ef366004610870565b610276565b60405190151581526020016100d8565b6002545b6040519081526020016100d8565b6100f461012436600461089a565b610297565b604051601281526020016100d8565b61014b610146366004610870565b6102bb565b005b61010861015b3660046108d7565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100cb6102c9565b6100f4610199366004610870565b6102d8565b6101086101ac3660046108f2565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101f390610925565b80601f016020809104026020016040519081016040528092919081815260200182805461021f90610925565b801561026c5780601f106102415761010080835404028352916020019161026c565b820191906000526020600020905b81548152906001019060200180831161024f57829003601f168201915b5050505050905090565b600080821161028457600080fd5b61028e83836102f0565b90505b92915050565b6000336102a58582856102fe565b6102b08585856103d3565b506001949350505050565b6102c58282610483565b5050565b6060600480546101f390610925565b6000336102e68185856103d3565b5060019392505050565b6000336102e68185856104df565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156103cd57818110156103be576040517ffb8f41b200000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8416600482015260248101829052604481018390526064015b60405180910390fd5b6103cd848484840360006104e8565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610423576040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600060048201526024016103b5565b73ffffffffffffffffffffffffffffffffffffffff8216610473576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016103b5565b61047e838383610630565b505050565b73ffffffffffffffffffffffffffffffffffffffff82166104d3576040517fec442f05000000000000000000000000000000000000000000000000000000008152600060048201526024016103b5565b6102c560008383610630565b61047e83838360015b73ffffffffffffffffffffffffffffffffffffffff8416610538576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016103b5565b73ffffffffffffffffffffffffffffffffffffffff8316610588576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016103b5565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260016020908152604080832093871683529290522082905580156103cd578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161062291815260200190565b60405180910390a350505050565b73ffffffffffffffffffffffffffffffffffffffff831661066857806002600082825461065d9190610978565b9091555061071a9050565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260208190526040902054818110156106ee576040517fe450d38c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260248101829052604481018390526064016103b5565b73ffffffffffffffffffffffffffffffffffffffff841660009081526020819052604090209082900390555b73ffffffffffffffffffffffffffffffffffffffff82166107435760028054829003905561076f565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090208054820190555b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516107ce91815260200190565b60405180910390a3505050565b602081526000825180602084015260005b8181101561080957602081860181015160408684010152016107ec565b5060006040828501015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011684010191505092915050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461086b57600080fd5b919050565b6000806040838503121561088357600080fd5b61088c83610847565b946020939093013593505050565b6000806000606084860312156108af57600080fd5b6108b884610847565b92506108c660208501610847565b929592945050506040919091013590565b6000602082840312156108e957600080fd5b61028e82610847565b6000806040838503121561090557600080fd5b61090e83610847565b915061091c60208401610847565b90509250929050565b600181811c9082168061093957607f821691505b602082108103610972577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b80820180821115610291577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212201cba6b57a939808afb04731559679cdcebd10479986a7f50fbaac98f190cbc8064736f6c634300081a0033";

type RevertOnZeroApprovalTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RevertOnZeroApprovalTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RevertOnZeroApprovalToken__factory extends ContractFactory {
  constructor(...args: RevertOnZeroApprovalTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override deploy(
    name: string,
    symbol: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, overrides || {}) as Promise<
      RevertOnZeroApprovalToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RevertOnZeroApprovalToken__factory {
    return super.connect(runner) as RevertOnZeroApprovalToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RevertOnZeroApprovalTokenInterface {
    return new Interface(_abi) as RevertOnZeroApprovalTokenInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RevertOnZeroApprovalToken {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RevertOnZeroApprovalToken;
  }
}
