/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IZetaRegistry,
  IZetaRegistryInterface,
} from "../../IZetaRegistry.sol/IZetaRegistry";

const _abi = [
  {
    type: "function",
    name: "addChain",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "chainInfo",
        type: "tuple",
        internalType: "struct IZetaRegistry.ChainInfo",
        components: [
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "active",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "chainType",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "blockConfirmations",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addContract",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "category",
        type: "uint8",
        internalType: "enum IZetaRegistry.ContractCategory",
      },
      {
        name: "contractInfo",
        type: "tuple",
        internalType: "struct IZetaRegistry.ContractInfo",
        components: [
          {
            name: "active",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
          {
            name: "implementation",
            type: "address",
            internalType: "address",
          },
          {
            name: "configurationData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "addZRC20Token",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "tokenIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "tokenAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "batchAddContracts",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifiers",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
      {
        name: "categories",
        type: "uint8[]",
        internalType: "enum IZetaRegistry.ContractCategory[]",
      },
      {
        name: "contractInfos",
        type: "tuple[]",
        internalType: "struct IZetaRegistry.ContractInfo[]",
        components: [
          {
            name: "active",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
          {
            name: "implementation",
            type: "address",
            internalType: "address",
          },
          {
            name: "configurationData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "chainExists",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "exists",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "contractExists",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "exists",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "createChainIdentifier",
    inputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "identifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "createContractIdentifier",
    inputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "identifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "pure",
  },
  {
    type: "function",
    name: "getActiveChainIdentifiers",
    inputs: [],
    outputs: [
      {
        name: "activeChainIdentifiers",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAllChainIdentifiers",
    inputs: [],
    outputs: [
      {
        name: "chainIdentifiers",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getChainCount",
    inputs: [],
    outputs: [
      {
        name: "count",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getChainInfo",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "chainInfo",
        type: "tuple",
        internalType: "struct IZetaRegistry.ChainInfo",
        components: [
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "active",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "chainType",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "blockConfirmations",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getContractAddress",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "addr",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getContractIdentifiers",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "contractIdentifiers",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getContractIdentifiersByCategory",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "category",
        type: "uint8",
        internalType: "enum IZetaRegistry.ContractCategory",
      },
    ],
    outputs: [
      {
        name: "contractIdentifiers",
        type: "bytes32[]",
        internalType: "bytes32[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getContractInfo",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "contractInfo",
        type: "tuple",
        internalType: "struct IZetaRegistry.ContractInfo",
        components: [
          {
            name: "active",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
          {
            name: "implementation",
            type: "address",
            internalType: "address",
          },
          {
            name: "configurationData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getSystemAddresses",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "connector",
        type: "address",
        internalType: "address",
      },
      {
        name: "erc20Custody",
        type: "address",
        internalType: "address",
      },
      {
        name: "tss",
        type: "address",
        internalType: "address",
      },
      {
        name: "tssUpdater",
        type: "address",
        internalType: "address",
      },
      {
        name: "zetaToken",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getZRC20Address",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "tokenIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "tokenAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "removeChain",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "removeContract",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setChainActive",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "active",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setContractActive",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "active",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateChain",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "chainInfo",
        type: "tuple",
        internalType: "struct IZetaRegistry.ChainInfo",
        components: [
          {
            name: "chainId",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "active",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "chainType",
            type: "uint8",
            internalType: "uint8",
          },
          {
            name: "blockConfirmations",
            type: "uint64",
            internalType: "uint64",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateContract",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractInfo",
        type: "tuple",
        internalType: "struct IZetaRegistry.ContractInfo",
        components: [
          {
            name: "active",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
          {
            name: "implementation",
            type: "address",
            internalType: "address",
          },
          {
            name: "configurationData",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateContractAddress",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "newAddress",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "updateContractConfiguration",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "configurationData",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [
      {
        name: "success",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "ChainAdded",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "chainId",
        type: "uint256",
        indexed: false,
        internalType: "uint256",
      },
      {
        name: "name",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ChainStatusUpdated",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "active",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContractAddressUpdated",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "category",
        type: "uint8",
        indexed: true,
        internalType: "uint8",
      },
      {
        name: "contractAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContractConfigurationUpdated",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "configurationData",
        type: "bytes",
        indexed: false,
        internalType: "bytes",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ContractStatusUpdated",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "active",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ZRC20TokenAdded",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "tokenIdentifier",
        type: "bytes32",
        indexed: true,
        internalType: "bytes32",
      },
      {
        name: "tokenAddress",
        type: "address",
        indexed: false,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "ArrayLengthMismatch",
    inputs: [
      {
        name: "expected",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "actual",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ChainAlreadyExists",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "ChainDoesNotExist",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "ContractAlreadyExists",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "ContractDoesNotExist",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "contractIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidContractAddress",
    inputs: [
      {
        name: "contractAddress",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "UnauthorizedCaller",
    inputs: [
      {
        name: "caller",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ZRC20TokenAlreadyExists",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "tokenIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "ZRC20TokenDoesNotExist",
    inputs: [
      {
        name: "chainIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
      {
        name: "tokenIdentifier",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
] as const;

export class IZetaRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IZetaRegistryInterface {
    return new Interface(_abi) as IZetaRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IZetaRegistry {
    return new Contract(address, _abi, runner) as unknown as IZetaRegistry;
  }
}
