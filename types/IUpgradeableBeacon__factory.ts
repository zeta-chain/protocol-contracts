/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IUpgradeableBeacon,
  IUpgradeableBeaconInterface,
} from "../IUpgradeableBeacon";

const _abi = [
  {
    type: "function",
    name: "upgradeTo",
    inputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
] as const;

export class IUpgradeableBeacon__factory {
  static readonly abi = _abi;
  static createInterface(): IUpgradeableBeaconInterface {
    return new Interface(_abi) as IUpgradeableBeaconInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IUpgradeableBeacon {
    return new Contract(address, _abi, runner) as unknown as IUpgradeableBeacon;
  }
}
